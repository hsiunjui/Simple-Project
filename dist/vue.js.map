{"version":3,"file":"vue.js","sources":["../src/observe/array.js","../src/observe/dep.js","../src/observe/index.js","../src/utils/nextTick.js","../src/observe/watcher.js","../src/initState.js","../src/compiler/parse.js","../src/compiler/generate.js","../src/compiler/index.js","../src/vnode/patch.js","../src/liftcycle.js","../src/utils/index.js","../src/init.js","../src/vnode/index.js","../src/global-api/index.js","../src/index.js"],"sourcesContent":["//函数劫持\r\n// 1 获取到数组原型上的方法（原来的方法）\r\nlet oldArrayProtoMethods = Array.prototype;\r\n\r\n//2继承一下\r\nexport let arrayMethods = Object.create(oldArrayProtoMethods)\r\n\r\nlet methods = [\r\n    'push',\r\n    'shift',\r\n    'unshift',\r\n    'reverse',\r\n    'sort',\r\n    'splice'\r\n]\r\n\r\nmethods.forEach(item => {\r\n    //进行函数劫持 push\r\n    arrayMethods[item] = function (...args) { //我自己的逻辑\r\n        //调用原来数组的方法\r\n        // console.log('数组被调用')\r\n        //当调用数组我们劫持后的这个7个方法 页面应该更新\r\n        //我们要知道数组对应那个dep\r\n        let result = oldArrayProtoMethods[item].apply(this, args)//this 就是  observer里的value\r\n        // 数组添加对象情况 ，给添加的对象，进行劫持\r\n        let inserted; // arr.push({a:1})\r\n        switch (item) {\r\n            case 'push': // arr.push({a:1},{b:2})\r\n            case 'unshift': // 这里是两个追加   追加的内容可能是对象类型，应该被再次进行 劫持\r\n                inserted = args\r\n                break;\r\n            case \"splice\":\r\n                args.splice(2); // arr.splice(0,1,{a:4})\r\n                break;\r\n        }\r\n        //判断一下 {}\r\n        let ob = this.__ob__\r\n        if(inserted) ob.obserArray(inserted); //给数组新增的值也要进行观测 {}\r\n        ob.dep.notify() //通知数组更新\r\n        return result\r\n    }\r\n})\r\n\r\n\r\n","let id = 0\r\nclass Dep {\r\n    constructor() {\r\n        this.subs = []\r\n        this.id = id++\r\n    }\r\n    //收集watcher \r\n    depend() {\r\n      \r\n        //我们希望water 可以存放 dep\r\n        //实现双休记忆的，让watcher 记住\r\n        //dep同时，让dep也记住了我们的watcher\r\n        Dep.targer.addDep(this)\r\n        // this.subs.push(Dep.targer) // id：1 记住他的dep\r\n    }\r\n    addSub(watcher){\r\n        this.subs.push(watcher)\r\n    }\r\n    //更新\r\n    notify() {\r\n        // console.log(Dep.targer)\r\n        this.subs.forEach(watcher => {\r\n            watcher.updata()\r\n        })\r\n    }\r\n}\r\n\r\n//dep  和 watcher 关系\r\nDep.targer = null;\r\nexport function pushTarget(watcher) {  //添加 watcher\r\n\r\n    Dep.targer = watcher //保留watcher\r\n    // console.log(Dep.targer)\r\n}\r\nexport function popTarget() {\r\n    Dep.targer = null //将变量删除\r\n}\r\nexport default Dep\r\n //多对多的关系\r\n //1. 一个属性有一个dep ,dep 作用：用来收集watcher的\r\n //2. dep和watcher 关系：(1)dep 可以存放多个watcher  (2):一个watcher可以对应多个dep","import { arrayMethods } from './array'\r\nimport Dep from './dep';\r\nclass observe {\r\n    constructor(value) {\r\n        //1 给所有的对象类型添加一个dep 属性\r\n        this.dep = new Dep() // 注意 （1）{}  (2) [] 不是给里面属性添加dep\r\n        // console.log(data)\r\n        //使用defineProperty 重新定义属性 作用用来观测数据已经劫持过来\r\n          //判断一个对象是否被观察过看他有没有 __ob__这个属性\r\n          Object.defineProperty(value,\"__ob__\",{\r\n           enumerable:false, //不能枚举\r\n           configurable:false, //控制属性描述符是否能改变\r\n           value:this\r\n          })\r\n\r\n        if (Array.isArray(value)) { //注意对数组中的数据进行劫持 方法 劫持 修改数据的方法\r\n            //我希望调用push  shift unshift splice sort reverse pop 这七个方法，那么我们就可以对\r\n            //你这个方法进行劫持\r\n            // 函数劫持，切片编程 []._ \r\n            value.__proto__ = arrayMethods // 对象__proto__属性：\r\n            //监听数组中的值时对象\r\n            this.obserArray(value)\r\n        } else {\r\n            this.walk(value)\r\n        }\r\n\r\n    }\r\n    obserArray(value) {\r\n        //进行循环\r\n        value.forEach(item => {\r\n            Observer(item)\r\n        })\r\n    }\r\n    walk(data) { //数据是对象的的{a:{b:{}}}\r\n        //循环\r\n        let keys = Object.keys(data) //获取对象的key  注意这个key 只是 对象的最外层的\r\n        keys.forEach(item => {\r\n            defineReactive(data, item, data[item]) //Vue.util 中有的\r\n        })\r\n    }\r\n}\r\n//对数据进行劫持\r\nfunction defineReactive(data, key, value) {\r\n    // Object.defineProperty\r\n  let chilidDep =  Observer(value) //获取到数组对应的dep \r\n    //1给我们的每个属性添加一个dep\r\n    let dep = new Dep();\r\n    //2将dep 存放起来，当页面取值时，说明这个值用来渲染，在将这个watcher和这个属性对应起来\r\n    Object.defineProperty(data, key, {\r\n        get() { //依赖收集\r\n            // console.log('获取数据', data, key, value)\r\n            if(Dep.targer){ //让这个属性记住这个watcher\r\n                dep.depend()\r\n                //3当我们对arr取值的时候 我们就让数组的dep记住这个watcher\r\n                if(chilidDep){\r\n                    chilidDep.dep.depend() //数组收集watcher\r\n                }\r\n            }\r\n            //检测一下 dep\r\n            //获取arr的值，会调用get 方法 我希望让当前数组记住这个渲染watcher\r\n\r\n            // console.log(dep.subs)\r\n            return value\r\n        },\r\n        set(newValue) { //依赖更新\r\n            //注意设置的值和原来的值是一样的\r\n            // console.log('设置值', data, key, value)\r\n            if (newValue == value) return;\r\n            Observer(newValue) //如果用户将值改为对象继续监控\r\n            value = newValue\r\n            dep.notify()\r\n        }\r\n    })\r\n}\r\nexport function Observer(data) {\r\n    // data 我们需要进行判断 typeof  object null\r\n    //不能不是对象 并且不是null\r\n    if (typeof data !== 'object' || data == null) {\r\n        return;\r\n    }\r\n    //判断用户是否已经观测\r\n    if(data.__ob__){\r\n        return data;\r\n    }\r\n    //对这个是数据进行劫持 我们通过一个类\r\n    return new observe(data)\r\n}","let callback = [];\r\nlet pending = false;\r\nfunction flush() {\r\n  callback.forEach((cb) => cb());\r\n  pending = false;\r\n}\r\nlet timerFunc;\r\n//处理兼容问题\r\nif (Promise) {\r\n  timerFunc = () => {\r\n    Promise.resolve().then(flush); //异步处理\r\n  };\r\n} else if (MutationObserver) {\r\n  //h5 异步方法 他可以监听 DOM 变化 ，监控完毕之后在来异步更新\r\n  let observe = new MutationObserver(flush);\r\n  let textNode = document.createTextNode(1); //创建文本\r\n  observe.observe(textNode, { characterData: true }); //观测文本的内容\r\n  timerFunc = () => {\r\n    textNode.textContent = 2;\r\n  };\r\n} else if (setImmediate) {\r\n  //ie\r\n  timerFunc = () => {\r\n    setImmediate(flush);\r\n  };\r\n}\r\nexport function nextTick(cb) {\r\n  console.log(222222, \"------------\");\r\n  // 1vue 2\r\n  //  console.log(cb)\r\n  //列队 [cb1,cb2]\r\n  callback.push(cb);\r\n  //Promise.then()  vue3\r\n  if (!pending) {\r\n    timerFunc(); //这个方法就是异步方法 但是 处理兼容问题\r\n    pending = true;\r\n  }\r\n}\r\n","import { pushTarget, popTarget } from \"./dep\";\r\nimport { nextTick } from \"../utils/nextTick\";\r\n\r\n//为什么封装成一个类 ，方便我们的扩展\r\nlet id = 0; //全局的\r\nclass Watcher {\r\n  //vm 实例\r\n  //exprOrfn vm._updata(vm._render())\r\n  constructor(vm, exprOrfn, cb, options) {\r\n    // 1.创建类第一步将选项放在实例上\r\n    this.vm = vm;\r\n    this.exprOrfn = exprOrfn;\r\n    this.cb = cb;\r\n    this.options = options;\r\n    // 2. 每一组件只有一个watcher 他是为标识e\r\n    this.id = id++;\r\n    this.user = !!options.user;\r\n    // 3.判断表达式是不是一个函数\r\n    this.deps = []; //watcher 记录有多少dep 依赖\r\n    this.depsId = new Set();\r\n    if (typeof exprOrfn === \"function\") {\r\n      this.getter = exprOrfn;\r\n    } else {\r\n      //{a,b,c}  字符串 变成函数\r\n      this.getter = function () {\r\n        //属性 c.c.c\r\n        let path = exprOrfn.split(\".\");\r\n        let obj = vm;\r\n        for (let i = 0; i < path.length; i++) {\r\n          obj = obj[path[i]];\r\n        }\r\n        return obj; //\r\n      };\r\n    }\r\n    // 4.执行渲染页面\r\n    this.value = this.get(); //保存watch 初始值\r\n  }\r\n  addDep(dep) {\r\n    //去重  判断一下 如果dep 相同我们是不用去处理的\r\n    let id = dep.id;\r\n    //  console.log(dep.id)\r\n    if (!this.depsId.has(id)) {\r\n      this.deps.push(dep);\r\n      this.depsId.add(id);\r\n      //同时将watcher 放到 dep中\r\n      // console.log(666)\r\n      dep.addSub(this);\r\n    }\r\n    // 现在只需要记住  一个watcher 有多个dep,一个dep 有多个watcher\r\n    //为后面的 component\r\n  }\r\n  run() {\r\n    //old new\r\n    let value = this.get(); //new\r\n    let oldValue = this.value; //old\r\n    this.value = value;\r\n    //执行 hendler (cb) 这个用户wathcer\r\n    if (this.user) {\r\n      this.cb.call(this.vm.value, oldValue);\r\n    }\r\n  }\r\n  get() {\r\n    // Dep.target = watcher\r\n\r\n    pushTarget(this); //当前的实例添加\r\n    const value = this.getter(); // 渲染页面  render()   with(wm){_v(msg,_s(name))} ，取值（执行get这个方法） 走劫持方法\r\n    popTarget(); //删除当前的实例 这两个方法放在 dep 中\r\n    console.log(\"get\", value);\r\n    return value;\r\n  }\r\n  //问题：要把属性和watcher 绑定在一起   去html页面\r\n  // (1)是不是页面中调用的属性要和watcher 关联起来\r\n  //方法\r\n  //（1）创建一个dep 模块\r\n  updata() {\r\n    //三次\r\n    //注意：不要数据更新后每次都调用 get 方法 ，get 方法回重新渲染\r\n    //缓存\r\n    // this.get() //重新渲染\r\n    queueWatcher(this);\r\n  }\r\n}\r\nlet queue = []; // 将需要批量更新的watcher 存放到一个列队中\r\nlet has = {};\r\nlet pending = false;\r\nfunction flushWatcher() {\r\n  queue.forEach((item) => {\r\n    item.run();\r\n  });\r\n  queue = [];\r\n  has = {};\r\n  pending = false;\r\n}\r\nfunction queueWatcher(watcher) {\r\n  console.log(\"===============243434\");\r\n  let id = watcher.id; // 每个组件都是同一个 watcher\r\n  //    console.log(id) //去重\r\n  if (has[id] == null) {\r\n    //去重\r\n    //列队处理\r\n    queue.push(watcher); //将wacher 添加到列队中\r\n    has[id] = true;\r\n    //防抖 ：用户触发多次，只触发一个\r\n    if (!pending) {\r\n      //异步：等待同步代码执行完毕之后，再执行\r\n      // setTimeout(()=>{\r\n      //   queue.forEach(item=>item.run())\r\n      //   queue = []\r\n      //   has = {}\r\n      //   pending = false\r\n      // },0)\r\n      nextTick(flushWatcher); //  nextTick相当于定时器\r\n    }\r\n    pending = true;\r\n  }\r\n}\r\nexport default Watcher;\r\n\r\n//nextTick 原理\r\n\r\n//优化\r\n//1 创建nextTick 方法\r\n","import { Observer } from \"./observe/index.js\";\r\nimport { nextTick } from \"./utils/nextTick.js\";\r\nimport Watcher from './observe/watcher'\r\nexport function initState(vm) {\r\n    // console.log(vm)\r\n    //\r\n    const opts = vm.$options\r\n    if (opts.data) {\r\n        initData(vm);\r\n    }\r\n    if (opts.watch) {\r\n        initWatch(vm);\r\n    }\r\n    if (opts.props) {\r\n        initProps(vm);\r\n    }\r\n  \r\n \r\n    if (opts.computed) {\r\n        initComputed(vm);\r\n    }\r\n    if (opts.methods) {\r\n        initMethod(vm);\r\n    }\r\n}\r\n\r\nfunction initComputed(vm) {\r\n\r\n}\r\nfunction initMethod(vm) {\r\n\r\n}\r\n//实现代理  将data中属性代理到 vm (this)\r\nfunction proxy(vm, data, key) {\r\n    Object.defineProperty(vm, key, {\r\n        get() {\r\n            return vm[data][key]// vm._data.a\r\n        },\r\n        set(newValue) {\r\n            vm[data][key] = newValue\r\n        }\r\n    })\r\n}\r\nfunction initData(vm) { //数据进行初始化\r\n    let data = vm.$options.data\r\n    data = vm._data = typeof data === 'function' ? data.call(vm) : data\r\n    // console.log(data)\r\n    //数据的劫持方案对象Object.defineProperty\r\n    //将data中的属性代理到vm  上\r\n    for (let key in data) {\r\n        proxy(vm, \"_data\", key)\r\n    }\r\n    Observer(data)\r\n}\r\nfunction initProps(vm) {\r\n\r\n}\r\nfunction initWatch(vm) {\r\n    //1 获取watch\r\n    let watch = vm.$options.watch\r\n    console.log(watch)\r\n    //2 遍历  { a,b,c}\r\n    for (let key in watch) {\r\n        //2.1获取 他的属性对应的值 （判断)\r\n        let handler = watch[key] //数组 ，对象 ，字符，函数\r\n        if (Array.isArray(handler)) {//数组  []\r\n            hendler.forEach(item=>{\r\n                createrWatcher(vm,key,item) \r\n            })\r\n        } else {//对象 ，字符，函数\r\n           //3创建一个方法来处理\r\n           createrWatcher(vm,key,handler)\r\n        }\r\n    }\r\n\r\n}\r\n\r\n//vm.$watch(()=>{return 'a'}) // 返回的值就是  watcher 上的属性 user = false\r\n//格式化处理\r\nfunction createrWatcher(vm,exprOrfn,handler,options){\r\n   //3.1 处理handler\r\n   if(typeof handler ==='object'){\r\n       options = handler; //用户的配置项目\r\n       handler = handler.handler;//这个是一个函数\r\n   }\r\n   if(typeof handler ==='string'){// 'aa'\r\n       handler = vm[handler] //将实例行的方法作为 handler 方法代理和data 一样\r\n   }\r\n   //其他是 函数\r\n   //watch 最终处理 $watch 这个方法\r\n   return vm.$watch(vm,exprOrfn,handler,options)\r\n}\r\n\r\nexport function stateMixin(vm) {\r\n    console.log(vm,6666)\r\n    //列队 :1就是vue自己的nextTick  2用户自己的\r\n    vm.prototype.$nextTick = function (cb) { //nextTick: 数据更新之后获取到最新的DOM\r\n        //  console.log(cb)\r\n        nextTick(cb)\r\n    },\r\n    vm.prototype.$watch =function(Vue,exprOrfn,handler,options={}){ //上面格式化处理\r\n        //   console.log(exprOrfn,handler,options)\r\n          //实现watch 方法 就是new  watcher //渲染走 渲染watcher $watch 走 watcher  user false\r\n         //  watch 核心 watcher\r\n         let watcher = new Watcher(Vue,exprOrfn,handler,{...options,user:true})\r\n          \r\n         if(options.immediate){\r\n            handler.call(Vue) //如果有这个immediate 立即执行\r\n         }\r\n    }\r\n    \r\n}\r\n\r\n//nextTick 原理 \r\n\r\n// watch 基本使用  init\r\n","\r\nconst ncname = `[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z]*`;   // 小a-z 大A到Z 标签名称： div  span a-aa\r\n//?: 匹配不捕获\r\nconst qnameCapture = `((?:${ncname}\\\\:)?${ncname})`; // 捕获这种 <my:xx> </my:xx>\r\nconst startTagOpen = new RegExp(`^<${qnameCapture}`); // 标签开头的正则 捕获的内容是标签名\r\nconst endTag = new RegExp(`^<\\\\/${qnameCapture}[^>]*>`); // 匹配标签结尾的 </div>\r\nconst attribute = /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/; // 匹配属性的\r\n//属性匹配   <div id=\"atts\"></div>  // aa = \"aa\" | aa = 'aa'\r\nconst startTagClose = /^\\s*(\\/?)>/; // 匹配标签结束的  <div></div>  <br/>\r\nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g // {{xx}}  默认的 双大括号\r\n//vue3 一摸一样的\r\n\r\n//通过数据结构 树，栈  变成 ast语法树\r\n\r\n\r\n\r\nexport function parseHTML(html) {\r\n    //创建树\r\n    function createASTELement(tagName, attrs) {\r\n        return {\r\n            tag: tagName, //标签名称\r\n            type: 1, //元素类型\r\n            children: [],// 孩子列表\r\n            attrs,   //属性集合\r\n            parent: null  // 父元素\r\n        }\r\n    }\r\n    //<div>hello {{name}} <span>world</span></div>\r\n    //创建3个方法\r\n    let root; //判断是否是根元素\r\n    let currentParent; //这个元素的当前父亲元素\r\n    //4 检测 标签是否符合预期 <div><span></span></div>   栈的方式来解决这个： [div,span]\r\n    let stack = []\r\n    function start(tagName, attrs) { //开始的标签\r\n        // console.log(tagName, attrs, '--开始--')\r\n        let element = createASTELement(tagName, attrs)\r\n        //注意：是不是根元素\r\n        if (!root) {\r\n            root = element\r\n        }\r\n        currentParent = element//当前解析的标签保存起来\r\n        stack.push(element)\r\n    }\r\n    //<div>hello<span></span> <p></p></div> // [div,span]\r\n    function end(tagName) { //结束的标签\r\n        // console.log(tagName, '----结束---')\r\n        let element = stack.pop() //取出 栈中的最后一个\r\n        currentParent = stack[stack.length - 1]\r\n        // debugger\r\n        if (currentParent) { //在闭合时可以知道这个标签的父亲说谁\r\n            element.parent = currentParent\r\n            currentParent.children.push(element) //将儿子放进去\r\n        }\r\n    }\r\n\r\n    function chars(text) { //文本\r\n        // console.log(text, '---文本---')\r\n        //注意：空格\r\n        text = text.replace(/\\s/g, '')\r\n        if (text) {\r\n            currentParent.children.push({\r\n                type: 3,\r\n                text\r\n            })\r\n        }\r\n    }\r\n    //1解析标签  <div id=\"my\">hello {{name}} <span>world</span></div>\r\n    while (html) { // 只要html 不为空字符串就一直执行下去\r\n        let textEnd = html.indexOf('<');\r\n        if (textEnd === 0) {\r\n            //肯定是标签\r\n            // console.log('开始', html)\r\n            //这个标签是开始标签还是结束标签\r\n            const startTagMatch = parseStartTag() //开始标签匹配结果\r\n            if (startTagMatch) {\r\n                start(startTagMatch.tagName, startTagMatch.attrs)\r\n                continue; //中断（循环中）的一个迭代，如果发生指定的条件。然后继续循环中的下一个迭代。\r\n            }\r\n            //处理结束标签\r\n            const endTagMatch = html.match(endTag)\r\n            if (endTagMatch) {\r\n                advance(endTagMatch[0].length)\r\n                end(endTagMatch[1])\r\n                continue;\r\n            }\r\n\r\n            // console.log(html)\r\n        }\r\n        //文本 \r\n        let text;\r\n        if (textEnd > 0) {\r\n            // console.log(textEnd)\r\n            text = html.substring(0, textEnd)\r\n        }\r\n        if (text) {//处理文本\r\n            advance(text.length)\r\n            chars(text)//获取到文本\r\n        }\r\n        // console.log(html)\r\n        // break //添加break 不然死循环\r\n    }\r\n    //删除标签\r\n    function advance(n) { //将字符串进行截取操作，再跟新到html\r\n        html = html.substring(n)\r\n\r\n    }\r\n    //匹配 开头的标签\r\n    function parseStartTag() {\r\n        const start = html.match(startTagOpen)// 1：成功结果 2:false\r\n        if (start) {//成功\r\n            // console.log(start)\r\n            //组合ast语法树\r\n            const match = {\r\n                tagName: start[1],\r\n                attrs: []\r\n            }\r\n            // console.log(match)\r\n            //删除开始标签\r\n            advance(start[0].length)\r\n            // console.log(html)\r\n            //属性,注意 可能又多个 属性  遍历\r\n            // 1：循环\r\n            // 2: 注意：1闭合标签 <div/>  , 2这个标签属性\r\n            let end;\r\n            let attr;\r\n            while (!(end = html.match(startTagClose)) && (attr = html.match(attribute))) {\r\n                // console.log(attr) //属性\r\n                match.attrs.push({ name: attr[1], value: attr[3] || attr[4] || attr[5] })\r\n                // console.log(match)\r\n                //ast语法树获取，删除\r\n                advance(attr[0].length) //删除属性 （没有了）\r\n                //    break;\r\n            }\r\n            if (end) {\r\n                advance(end[0].length) //删除 >\r\n                // console.log(end)\r\n                return match\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    // 最后返回  root \r\n    return root\r\n}","//思路\r\n//  <div id=\"app\" style=\"color:red\"> hello {{name}}<p>hello1</P> </div>\r\n//变成 render()\r\n// render(){\r\n//      return _c(\"div\",{id:\"app\",style:{color:\"res\"}},_v('hello'+_s(name)),_c('p'，null,_v('hello1)))\r\n//    }\r\nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g; //注意正则匹配 lastIndex\r\n// 处理元素的属性\r\nfunction genProps(attrs) {\r\n    //处理属性\r\n    let str = ''\r\n    for (let i = 0; i < attrs.length; i++) {\r\n        let attr = attrs[i]\r\n        //注意;   style：\"color:red;font-size: 20px\r\n        if (attr.name === 'style') {\r\n            let obj = {} //对样式进行特殊处理\r\n            attr.value.split(';').forEach(item => {\r\n                let [key, value] = item.split(':')\r\n                obj[key] = value\r\n            })\r\n            attr.value = obj //\r\n        }\r\n        //其他  'id:app',注意最后会多个属性化 逗号\r\n        str += `${attr.name}:${JSON.stringify(attr.value)},`\r\n    }\r\n    return `{${str.slice(0, -1)}}`  // -1为最后一个字符串的位置  演示一下 \r\n    // let reg =/a/g    reg.test('ad') false  \r\n}\r\n//判断是否又儿子\r\nfunction genChildren(el) {\r\n    const children = el.children\r\n    if (children) { //将所有\r\n        return children.map(child => gen(child)).join(',')\r\n    }\r\n\r\n\r\n}\r\nfunction gen(node) { //获取到的元素\r\n    //注意 是什么类型  文本   div\r\n    if (node.type === 1) {\r\n        return generate(node) //生成元素节点的字符串\r\n    } else {\r\n        let text = node.text // 获取文本  注意  普通的文本  hello{{name}}?{{num}}\r\n        if (!defaultTagRE.test(text)) {\r\n            return `_v(${JSON.stringify(text)})`  // _v(html)  _v('hello'+_s(name))\r\n        }\r\n        let tokens = [] //存放每一段的代码\r\n        let lastIndex = defaultTagRE.lastIndex = 0;//如果正则是全局模式 需要每次使用前变为0\r\n        let match;// 每次匹配到的结果  exec 获取 {{name}}\r\n        while (match = defaultTagRE.exec(text)) {\r\n            // console.log(match) 获取到 又{{}}  元素\r\n            //  console.log(match)\r\n           let index = match.index;// 保存匹配到的索引\r\n          // hello{{name}} ? {{num}}\r\n            if (index > lastIndex) {\r\n               tokens.push(JSON.stringify(text.slice(lastIndex,index))) //添加的是文本\r\n            //    console.log(tokens)\r\n            }\r\n            //{{name}} 添加{{}} aa\r\n            tokens.push(`_s(${match[1].trim()})`)\r\n             lastIndex = index+match[0].length //最后 {{}} 索引位置\r\n        }\r\n        if(lastIndex<text.length){\r\n           tokens.push(JSON.stringify(text.slice(lastIndex))) \r\n        }\r\n        //最终返回出去\r\n\r\n        return `_v(${tokens.join(\"+\")})`\r\n    }\r\n\r\n\r\n}\r\n//语法层面的转移\r\nexport function generate(el) {\r\n    // console.log(el)\r\n    let children = genChildren(el)\r\n    //方法 拼接字符串  源码也是这样操作 [{}]    ${el.attrs.length?`{style:{color:red}}`:'undefined'}\r\n    let code = `_c('${el.tag}',${el.attrs.length ? `${genProps(el.attrs)}` : 'undefined'}${\r\n        children ? `,${children}` : ''\r\n        })`\r\n    return code\r\n}","import { parseHTML } from \"./parse\";\r\nimport { generate } from \"./generate\";\r\n\r\n\r\nexport function compileToFunction(template) { //编译模板\r\n    let ast = parseHTML(template)\r\n    //2通过这个棵树重新的生成代码  render\r\n    let code = generate(ast) //对象\r\n    //  console.log(code)\r\n     //3将字符传变成函数\r\n    //  let render = new Function(code) //new Function()创建函数的语法： es6\r\n    let render = new Function(`with(this){return ${code}}`) //通过with 来进行取值，稍后调用\r\n    //render 函数就可以通过改变this 让这个函数内部取到结果？\r\n     //注意  code 中的变量  name 那里的  ，是不是this\r\n    //  console.log(render)\r\n     return render\r\n     //后面渲染我们的节点 ，再放到页面上去\r\n}\r\n\r\n// //with   添加一个作用域\r\n// let obj ={a:1,b:2}\r\n// with(obj ){\r\n//       console.log(a,b)\r\n// }","export function patch(oldVnode, Vnode) {\r\n    //原则  将虚拟节点转换成真实的节点\r\n    //第一次渲染 oldVnode 是一个真实的DOM\r\n    if (oldVnode.nodeType === 1) {\r\n        // console.log(oldVnode, Vnode)  //注意oldVnode 需要在加载 mount 添加上去  vm.$el= el\r\n\r\n        let el = createELm(Vnode) // 产生一个新的DOM\r\n        let parentElm = oldVnode.parentNode //获取老元素（app） 父亲 ，body\r\n        //   console.log(oldVnode)\r\n        //  console.log(parentElm)\r\n        //插入\r\n        parentElm.insertBefore(el, oldVnode.nextSibling) //当前真实的元素插入到app 的后面\r\n        parentElm.removeChild(oldVnode) //删除老节点\r\n        //重新赋值\r\n        return el\r\n    }else{ //  diff\r\n        console.log(oldVnode, Vnode)\r\n         //1 元素不是一样 \r\n         if(oldVnode.tag!==Vnode.tag){\r\n          return  oldVnode.el.parentNode.replaceChild(createELm(Vnode),oldVnode.el) \r\n         }\r\n         //2 标签一样 text  属性 <div>1</div>  <div>2</div>  tag:undefined\r\n         if(!oldVnode.tag){\r\n             if(oldVnode.text !==Vnode.text){\r\n                 return   oldVnode.el.textContent = Vnode.text\r\n             }\r\n         }\r\n         //2.1属性 (标签一样)  <div id='a'>1</div>  <div style>2</div>\r\n         //方法 1直接复制\r\n       let el = Vnode.el = oldVnode.el\r\n       updataRpors(Vnode,oldVnode.data)\r\n       //diff子元素 <div>1</div>  <div></div>\r\n       let oldChildren = oldVnode.children || []\r\n       let newChildren = Vnode.children || []\r\n       if(oldChildren.length>0&&newChildren.length>0){ //老的有儿子 新有儿子\r\n              //创建方法\r\n              updataChild(oldChildren,ewChildren,el)\r\n       }else if(oldChildren.length>0){//老的元素 有儿子 新的没有儿子\r\n             el.innerHTML = ''\r\n       }else if(newChildren.length>0){//老没有儿子  新的有儿子\r\n             for(let i = 0;i<newChildren.length;i++){\r\n                 let child = newChildren[i]\r\n                 //添加到真实DOM\r\n                 el.appendChild(createELm(child))\r\n             }\r\n       }\r\n \r\n    }\r\n}\r\nfunction updataChild (oldChildren,ewChildren,el){\r\n\r\n}\r\n//添加属性\r\nfunction updataRpors(vnode,oldProps={}){ //第一次\r\n  let newProps = vnode.data ||{} //获取当前新节点 的属性\r\n  let el = vnode.el //获取当前真实节点 {}\r\n  //1老的有属性，新没有属性\r\n  for(let key in oldProps){\r\n      if(!newProps[key]){\r\n          //删除属性\r\n          el.removeAttribute[key] //\r\n      }\r\n  }\r\n  //2演示 老的 style={color:red}  新的 style=\"{background:red}\"\r\n   let newStyle = newProps.style ||{} //获取新的样式\r\n   let oldStyle = oldProps.style ||{} //老的\r\n   for(let key in oldStyle){\r\n       if(!newStyle[key]){\r\n           el.style =''\r\n       }\r\n   }\r\n  //新的\r\n  for(let key in newProps){\r\n      if(key ===\"style\"){\r\n         for(let styleName in newProps.style){\r\n             el.style[styleName] =  newProps.style[styleName]\r\n         }\r\n      }else if( key ==='class'){\r\n          el.className = newProps.class\r\n      }else{\r\n          el.setAttribute(key,newProps[key])\r\n      }\r\n  }\r\n}\r\n//vnode 变成真实的Dom\r\nexport function createELm(vnode) {\r\n    let { tag, children, key, data, text } = vnode\r\n    //注意\r\n    if (typeof tag === 'string') { //创建元素 放到 vnode.el上\r\n        vnode.el = document.createElement(tag)  //创建元素 \r\n        updataRpors(vnode)\r\n        //有儿子\r\n        children.forEach(child => {\r\n            // 递归 儿子 将儿子渲染后的结果放到 父亲中\r\n            vnode.el.appendChild(createELm(child))\r\n        })\r\n    } else { //文本\r\n        vnode.el = document.createTextNode(text)\r\n    }\r\n    return vnode.el //新的dom\r\n}\r\n\r\n//思路 ：虚拟dom 变成正式的dom \r\n// 1获取到真实的dom  虚拟daom\r\n// 2.将虚拟dom变成正式dom\r\n// 3.获取到旧dom的父亲元素\r\n// 4.将新的dom 方法 app 后面\r\n// 5.删除 就的元素","import {patch} from './vnode/patch'\r\nimport Watcher from './observe/watcher'\r\nexport function  mountComponent(vm,el){\r\n   //调用render方法去渲染 el属性\r\n\r\n   //方法：先调用render方法创建虚拟节点，在将虚拟节点渲染到页面上\r\n   //源码方式\r\n   callHook(vm,\"beforeMount\")\r\n   //挂载  重新封装一下 变成一个类，这个类他是响应式变的，数据改变了我们就调用这个方法\r\n   //   vm._updata(vm._render()) \r\n   let updataComponent = ()=>{\r\n      vm._updata(vm._render())\r\n   }\r\n   //这个watcher 是用于渲染的 目前没有任何功能 ，updataComponent \r\n    new Watcher(vm,updataComponent,()=>{\r\n       callHook(vm,'updated')\r\n    },true) //Watcher 有什么用  和之前差不多，1把实例缠绕进去 ,2在给他传入一个方法\r\n    //true 标识渲染的  ，（）=》{} 跟新逻辑\r\n    callHook(vm,\"mounted\")\r\n}\r\n\r\n//创建这两个方法\r\nexport function liftcycleMixin(Vue){ //这个方法在那个地方使用的\r\n   Vue.prototype._updata = function(vnode){\r\n      //   console.log(vnode)\r\n        const vm = this\r\n        vm.$el =  patch(vm.$el,vnode) //获取到最新的渲染值\r\n   }\r\n}\r\n\r\n//生命周期初始化\r\nexport function callHook(vm,hook){\r\n   const handlers = vm.$options[hook] // created = [a1,a2,a3]\r\n   if(handlers){\r\n      for(let i = 0;i<handlers.length;i++){\r\n         handlers[i].call(vm); //改变生命周期中的this\r\n      }\r\n   }\r\n}\r\n//怎么调用\r\n//  callHook(vm,\"created\")\r\n","\r\nexport  const HOOKS = [\r\n    \"beforeCreate\",\r\n    \"created\",\r\n    \"beforeMount\",\r\n    \"mounted\",\r\n    \"beforeUpdate\",\r\n    \"updated\",\r\n    \"beforeDestory\",\r\n    \"destroyed\"\r\n]\r\n// 策略模式\r\nconst strats = {}\r\nstrats.data = function (parentVal,childVal){ //data合并\r\n    return childVal //这里应该有合并data 方法\r\n}\r\n// strats.computed =function(){\r\n// }\r\n// strats.methods = function(){}\r\n// strats.watch =function(){\r\n// }\r\n\r\nfunction mergeHook(parentVal,childVal){ //生命周期的合并\r\n    // console.log(parentVal) [a] b [a,b]\r\n  if(childVal){\r\n      if(parentVal){\r\n           return parentVal.concat(childVal);//爸爸和儿子进行并接\r\n      }else{\r\n          return [childVal]  // {}{created:function} // [created]\r\n      }\r\n  }else{\r\n       return parentVal  //不用合并 采用父亲的\r\n  }\r\n}\r\n//遍历这个hooks\r\n HOOKS.forEach(hooks=>{\r\n     strats[hooks] = mergeHook\r\n })\r\n // Vue.options ={}    Vue.mixin({})   {created:[a,b,组件上的]}\r\nexport function mergeOptions(parent,child){ \r\n    const options = {}\r\n    // console.log(parent) {created:[a]}\r\n    //遍历父亲：可能是父亲有，儿子没有\r\n   for(let key in parent){ //父亲和儿子都有在这里进行处理\r\n       mergeField(key)\r\n   }\r\n    //儿子有父亲没有\r\n   for(let key in child){ //将儿子多的赋值到父亲上\r\n      if(!parent.hasOwnProperty(key)){ \r\n          mergeField(key)\r\n      }\r\n   }\r\n    function mergeField(key){ //合并字段 created\r\n         //根据key  不同的策略进行合并\r\n        // 比如 {key:parent[key] child[key]}\r\n        //注意 我们这个key可能是一个钩子函数\r\n        // console.log(child)\r\n        if(strats[key]){ // strats.created = \r\n          options[key]=  strats[key](parent[key],child[key]) //[a]\r\n        }else{\r\n            //默认合并策略\r\n            options[key] = child[key]\r\n        }\r\n        //(1) {created:[a,b]} \r\n    }\r\n    return options\r\n}","//初始化\r\nimport { initState } from './initState'\r\nimport {compileToFunction} from './compiler/index'\r\nimport {mountComponent, callHook} from './liftcycle'\r\nimport { mergeOptions } from './utils/index';\r\nexport function initMixin(Vue) {\r\n  //面试题  全局组件和局部组件的区别\r\n  //局部组件是不是在等前的组件中可以使用\r\n  //全局组件在项目中任何地方都可以使用 原因 在组件初始化的时候 合并进来了\r\n\r\n  Vue.prototype._init = function (options) {\r\n    //el 显示页面\r\n    //data  数据初始化\r\n    //\r\n    // console.log(options)\r\n    const vm = this\r\n    // 注意 ：组件中都有一个 vue\r\n    vm.$options = mergeOptions(Vue.options,options) // 需要将用户自定义的options 合并 谁和谁合并\r\n    //初始化 状态 （将数据做一个初始化的劫持，当我改变数据时应跟新视图）\r\n    //vue组件中有很多状态 data,props watch computed\r\n    console.log( vm.$options )\r\n    callHook(vm,\"beforeCreate\")\r\n    initState(vm) //初始化状态\r\n    callHook(vm,\"created\")\r\n    //vue核心特点  响应式数据原理\r\n    //vue 是一个什么样的框架 mvvm\r\n    //数据变化视图更新，视图变化数据会被影响（mvvm） 不能跳过数据去更新视图，$ref   \r\n\r\n    // 如果当前 有el 属性说明要渲染模块\r\n    if (vm.$options.el) {\r\n      vm.$mount(vm.$options.el)\r\n    }\r\n  }\r\n  //创建 $mount 方法\r\n   Vue.prototype.$mount = function(el){\r\n          //进行挂载操作\r\n          const vm = this;\r\n          const options = vm.$options //\r\n          // console.log(el)\r\n          //获取元素\r\n          el = document.querySelector(el);\r\n          vm.$el = el\r\n          //现在我们就希望渲染页面\r\n          //1: 如果有render  渲染render\r\n          if(!options.render){ // 没有\r\n            let template = options.template\r\n             //1.1 需要判断有没有template\r\n             if(!template&& el){\r\n                //1.2 获取el 内容\r\n                //DOM接口的outerHTML属性获取描述元素（包括其后代）的序列化HTML片段。它也可以设置为用从给定字符串解析的节点替换元素。\r\n                 //innerHTML 里面的元素\r\n                template = el.outerHTML\r\n             }\r\n            //  console.log(template)\r\n             //获取到元素(template模块)，将元素转换成render\r\n             const render = compileToFunction(template)\r\n             options.render = render\r\n          }\r\n          // console.log(options.render) // 渲染到页面的都是这个render方法\r\n          //需要挂载这个组件\r\n          mountComponent(vm,el)\r\n\r\n   }\r\n}\r\n","export function renderMixin(Vue) {\r\n    //在vue 上创建这些方法  _c,_v,_s 作用创建虚拟节点  用对象来描述dom\r\n    Vue.prototype._c = function () { //创建元素\r\n          return createElement(...arguments)\r\n    }\r\n    Vue.prototype._s = function (val) { // stringify  字符串\r\n        //注意值的类型\r\n        return val == null ? \"\" : (typeof val == 'object') ? JSON.stringify(val) :val\r\n    }\r\n    Vue.prototype._v = function (text) { // 创建虚拟文本元素\r\n        return createTextVnode(text)\r\n    }\r\n    Vue.prototype._render = function () {\r\n        //将 render函数编程虚拟节点\r\n        //获取render 函数\r\n        let vm = this\r\n        const render = vm.$options.render\r\n        //执行render 函数\r\n        let vnode = render.call(this)\r\n        // console.log(vnode) //展示生成的vnode,就描述的dom结构 好处\r\n        return vnode\r\n    }\r\n}\r\n\r\nfunction createElement(tag,data={},...children){\r\n     return vnode(tag,data,data.key,children)\r\n}\r\n\r\nfunction createTextVnode(text){\r\n   return vnode(undefined,undefined,undefined,undefined,text)\r\n}\r\n  //用来产生虚拟dom\r\nfunction vnode(tag,data,key,children,text){\r\n   return {\r\n       tag,\r\n       data,\r\n       key,\r\n       children,\r\n       text\r\n   }\r\n}","import { mergeOptions } from \"../utils/index\";\r\n\r\n export function initGlobalApi(Vue){\r\n     // 源码当中 你所有定义的全局方法都是 放在\r\n     // Vue.options = {} //Vue.component Vue.diretive\r\n     Vue.options = {}; // {created:[a,b,]}\r\n   Vue.mixin = function(mixin){\r\n      // console.log(mixin) \r\n      //实现合并 就是合并对象 （我先考虑生命周期）不考虑其他的合并 data,computed watch\r\n      this.options = mergeOptions(this.options,mixin)\r\n      //  console.log( Vue.options,99999)\r\n   }\r\n }\r\n\r\n//  options:{created:[a,b,vue1]}","import { initMixin } from \"./init\";\r\nimport { liftcycleMixin } from \"./liftcycle\";\r\nimport { renderMixin } from \"./vnode/index\";\r\nimport { initGlobalApi } from \"./global-api/index\";\r\nimport {stateMixin} from './initState'\r\nimport {compileToFunction} from './compiler/index'\r\nimport {createELm,patch} from './vnode/patch'\r\n  function Vue(options){\r\n    this._init(options)\r\n  }\r\n  //这些方法都是原型上的方法\r\n  initMixin(Vue)  //给原型上添加一个  init 方法\r\n  liftcycleMixin(Vue) //混合生命周期 渲染\r\n  renderMixin(Vue)    // _render\r\n  stateMixin(Vue)  // 给 vm 添加  $nextTick\r\n  //静态方法  ，也是全局方法  Vue.component .Vue.extend Vue.mixin ..\r\n    initGlobalApi(Vue);\r\n\r\n    //创建vnode\r\n    let vm1 = new Vue({data:{name:'张三'}})\r\n    let render1 = compileToFunction(`<ul>\r\n     <li>a</li>\r\n     <li>b</li>\r\n     <li>c</li>\r\n    </ul>`)\r\n    let vnode1 = render1.call(vm1)\r\n     document.body.appendChild(createELm(vnode1))\r\n   //数据更新\r\n     let vm2 = new Vue({data:{name:'李四'}})\r\n     let render2 = compileToFunction(`<ul>\r\n     <li>a</li>\r\n     <li>b</li>\r\n     <li>c</li>\r\n     <li>d</li>\r\n    </ul>`)\r\n     let vnode2 = render2.call(vm2)\r\n     //patch 比对\r\n      setTimeout(()=>{\r\n        patch(vnode1,vnode2)\r\n      },2000)\r\n  export default Vue"],"names":["oldArrayProtoMethods","Array","prototype","arrayMethods","Object","create","methods","forEach","item","args","result","apply","inserted","splice","ob","__ob__","obserArray","dep","notify","id","Dep","subs","targer","addDep","watcher","push","updata","pushTarget","popTarget","observe","value","defineProperty","enumerable","configurable","isArray","__proto__","walk","Observer","data","keys","defineReactive","key","chilidDep","get","depend","set","newValue","callback","pending","flush","cb","timerFunc","Promise","resolve","then","MutationObserver","textNode","document","createTextNode","characterData","textContent","setImmediate","nextTick","console","log","Watcher","vm","exprOrfn","options","user","deps","depsId","Set","getter","path","split","obj","i","length","has","add","addSub","oldValue","call","queueWatcher","queue","flushWatcher","run","initState","opts","$options","initData","watch","initWatch","props","computed","proxy","_data","handler","hendler","createrWatcher","$watch","stateMixin","$nextTick","Vue","immediate","ncname","qnameCapture","startTagOpen","RegExp","endTag","attribute","startTagClose","parseHTML","html","createASTELement","tagName","attrs","tag","type","children","parent","root","currentParent","stack","start","element","end","pop","chars","text","replace","textEnd","indexOf","startTagMatch","parseStartTag","endTagMatch","match","advance","substring","n","attr","name","defaultTagRE","genProps","str","JSON","stringify","slice","genChildren","el","map","child","gen","join","node","generate","test","tokens","lastIndex","exec","index","trim","code","compileToFunction","template","ast","render","Function","patch","oldVnode","Vnode","nodeType","createELm","parentElm","parentNode","insertBefore","nextSibling","removeChild","replaceChild","updataRpors","oldChildren","newChildren","updataChild","ewChildren","innerHTML","appendChild","vnode","oldProps","newProps","removeAttribute","newStyle","style","oldStyle","styleName","className","setAttribute","createElement","mountComponent","callHook","updataComponent","_updata","_render","liftcycleMixin","$el","hook","handlers","HOOKS","strats","parentVal","childVal","mergeHook","concat","hooks","mergeOptions","mergeField","hasOwnProperty","initMixin","_init","$mount","querySelector","outerHTML","renderMixin","_c","arguments","_s","val","_v","createTextVnode","undefined","initGlobalApi","mixin","vm1","render1","vnode1","body","vm2","render2","vnode2","setTimeout"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAAA;EACA;EACA,IAAIA,oBAAoB,GAAGC,KAAK,CAACC,SAAjC;;EAGO,IAAIC,YAAY,GAAGC,MAAM,CAACC,MAAP,CAAcL,oBAAd,CAAnB;EAEP,IAAIM,OAAO,GAAG,CACV,MADU,EAEV,OAFU,EAGV,SAHU,EAIV,SAJU,EAKV,MALU,EAMV,QANU,CAAd;EASAA,OAAO,CAACC,OAAR,CAAgB,UAAAC,IAAI,EAAI;EACpB;EACAL,EAAAA,YAAY,CAACK,IAAD,CAAZ,GAAqB,YAAmB;EAAA,sCAANC,IAAM;EAANA,MAAAA,IAAM;EAAA;;EAAE;EACtC;EACA;EACA;EACA;EACA,QAAIC,MAAM,GAAGV,oBAAoB,CAACQ,IAAD,CAApB,CAA2BG,KAA3B,CAAiC,IAAjC,EAAuCF,IAAvC,CAAb,CALoC;EAMpC;;EACA,QAAIG,QAAJ,CAPoC;;EAQpC,YAAQJ,IAAR;EACI,WAAK,MAAL,CADJ;;EAEI,WAAK,SAAL;EAAgB;EACZI,QAAAA,QAAQ,GAAGH,IAAX;EACA;;EACJ,WAAK,QAAL;EACIA,QAAAA,IAAI,CAACI,MAAL,CAAY,CAAZ,EADJ;;EAEI;EAPR,KARoC;;;EAkBpC,QAAIC,EAAE,GAAG,KAAKC,MAAd;EACA,QAAGH,QAAH,EAAaE,EAAE,CAACE,UAAH,CAAcJ,QAAd,EAnBuB;;EAoBpCE,IAAAA,EAAE,CAACG,GAAH,CAAOC,MAAP,GApBoC;;EAqBpC,WAAOR,MAAP;EACH,GAtBD;EAuBH,CAzBD;;EChBA,IAAIS,IAAE,GAAG,CAAT;;MACMC;EACF,iBAAc;EAAA;;EACV,SAAKC,IAAL,GAAY,EAAZ;EACA,SAAKF,EAAL,GAAUA,IAAE,EAAZ;EACH;;;;;aAED,kBAAS;EAEL;EACA;EACA;EACAC,MAAAA,GAAG,CAACE,MAAJ,CAAWC,MAAX,CAAkB,IAAlB,EALK;EAOR;;;aACD,gBAAOC,OAAP,EAAe;EACX,WAAKH,IAAL,CAAUI,IAAV,CAAeD,OAAf;EACH;;;;aAED,kBAAS;EACL;EACA,WAAKH,IAAL,CAAUd,OAAV,CAAkB,UAAAiB,OAAO,EAAI;EACzBA,QAAAA,OAAO,CAACE,MAAR;EACH,OAFD;EAGH;;;;;;;EAILN,GAAG,CAACE,MAAJ,GAAa,IAAb;EACO,SAASK,UAAT,CAAoBH,OAApB,EAA6B;EAAG;EAEnCJ,EAAAA,GAAG,CAACE,MAAJ,GAAaE,OAAb,CAFgC;EAGhC;EACH;EACM,SAASI,SAAT,GAAqB;EACxBR,EAAAA,GAAG,CAACE,MAAJ,GAAa,IAAb,CADwB;EAE3B;EAGA;EACA;;MCtCKO;EACF,mBAAYC,KAAZ,EAAmB;EAAA;;EACf;EACA,SAAKb,GAAL,GAAW,IAAIG,GAAJ,EAAX,CAFe;EAGf;EACA;EACE;;EACAhB,IAAAA,MAAM,CAAC2B,cAAP,CAAsBD,KAAtB,EAA4B,QAA5B,EAAqC;EACpCE,MAAAA,UAAU,EAAC,KADyB;EAClB;EAClBC,MAAAA,YAAY,EAAC,KAFuB;EAEhB;EACpBH,MAAAA,KAAK,EAAC;EAH8B,KAArC;;EAMF,QAAI7B,KAAK,CAACiC,OAAN,CAAcJ,KAAd,CAAJ,EAA0B;EAAE;EACxB;EACA;EACA;EACAA,MAAAA,KAAK,CAACK,SAAN,GAAkBhC,YAAlB,CAJsB;EAKtB;;EACA,WAAKa,UAAL,CAAgBc,KAAhB;EACH,KAPD,MAOO;EACH,WAAKM,IAAL,CAAUN,KAAV;EACH;EAEJ;;;;aACD,oBAAWA,KAAX,EAAkB;EACd;EACAA,MAAAA,KAAK,CAACvB,OAAN,CAAc,UAAAC,IAAI,EAAI;EAClB6B,QAAAA,QAAQ,CAAC7B,IAAD,CAAR;EACH,OAFD;EAGH;;;aACD,cAAK8B,IAAL,EAAW;EAAE;EACT;EACA,UAAIC,IAAI,GAAGnC,MAAM,CAACmC,IAAP,CAAYD,IAAZ,CAAX,CAFO;;EAGPC,MAAAA,IAAI,CAAChC,OAAL,CAAa,UAAAC,IAAI,EAAI;EACjBgC,QAAAA,cAAc,CAACF,IAAD,EAAO9B,IAAP,EAAa8B,IAAI,CAAC9B,IAAD,CAAjB,CAAd,CADiB;EAEpB,OAFD;EAGH;;;;;;;EAGL,SAASgC,cAAT,CAAwBF,IAAxB,EAA8BG,GAA9B,EAAmCX,KAAnC,EAA0C;EACtC;EACF,MAAIY,SAAS,GAAIL,QAAQ,CAACP,KAAD,CAAzB,CAFwC;EAGtC;;EACA,MAAIb,GAAG,GAAG,IAAIG,GAAJ,EAAV,CAJsC;;EAMtChB,EAAAA,MAAM,CAAC2B,cAAP,CAAsBO,IAAtB,EAA4BG,GAA5B,EAAiC;EAC7BE,IAAAA,GAD6B,iBACvB;EAAE;EACJ;EACA,UAAGvB,GAAG,CAACE,MAAP,EAAc;EAAE;EACZL,QAAAA,GAAG,CAAC2B,MAAJ,GADU;;EAGV,YAAGF,SAAH,EAAa;EACTA,UAAAA,SAAS,CAACzB,GAAV,CAAc2B,MAAd,GADS;EAEZ;EACJ,OARC;EAUF;EAEA;;;EACA,aAAOd,KAAP;EACH,KAf4B;EAgB7Be,IAAAA,GAhB6B,eAgBzBC,QAhByB,EAgBf;EAAE;EACZ;EACA;EACA,UAAIA,QAAQ,IAAIhB,KAAhB,EAAuB;EACvBO,MAAAA,QAAQ,CAACS,QAAD,CAAR,CAJU;;EAKVhB,MAAAA,KAAK,GAAGgB,QAAR;EACA7B,MAAAA,GAAG,CAACC,MAAJ;EACH;EAvB4B,GAAjC;EAyBH;;EACM,SAASmB,QAAT,CAAkBC,IAAlB,EAAwB;EAC3B;EACA;EACA,MAAI,QAAOA,IAAP,MAAgB,QAAhB,IAA4BA,IAAI,IAAI,IAAxC,EAA8C;EAC1C;EACH,GAL0B;;;EAO3B,MAAGA,IAAI,CAACvB,MAAR,EAAe;EACX,WAAOuB,IAAP;EACH,GAT0B;;;EAW3B,SAAO,IAAIT,SAAJ,CAAYS,IAAZ,CAAP;EACH;;ECtFD,IAAIS,QAAQ,GAAG,EAAf;EACA,IAAIC,SAAO,GAAG,KAAd;;EACA,SAASC,KAAT,GAAiB;EACfF,EAAAA,QAAQ,CAACxC,OAAT,CAAiB,UAAC2C,EAAD;EAAA,WAAQA,EAAE,EAAV;EAAA,GAAjB;EACAF,EAAAA,SAAO,GAAG,KAAV;EACD;;EACD,IAAIG,SAAJ;;EAEA,IAAIC,OAAJ,EAAa;EACXD,EAAAA,SAAS,GAAG,qBAAM;EAChBC,IAAAA,OAAO,CAACC,OAAR,GAAkBC,IAAlB,CAAuBL,KAAvB,EADgB;EAEjB,GAFD;EAGD,CAJD,MAIO,IAAIM,gBAAJ,EAAsB;EAC3B;EACA,MAAI1B,OAAO,GAAG,IAAI0B,gBAAJ,CAAqBN,KAArB,CAAd;EACA,MAAIO,QAAQ,GAAGC,QAAQ,CAACC,cAAT,CAAwB,CAAxB,CAAf,CAH2B;;EAI3B7B,EAAAA,OAAO,CAACA,OAAR,CAAgB2B,QAAhB,EAA0B;EAAEG,IAAAA,aAAa,EAAE;EAAjB,GAA1B,EAJ2B;;EAK3BR,EAAAA,SAAS,GAAG,qBAAM;EAChBK,IAAAA,QAAQ,CAACI,WAAT,GAAuB,CAAvB;EACD,GAFD;EAGD,CARM,MAQA,IAAIC,YAAJ,EAAkB;EACvB;EACAV,EAAAA,SAAS,GAAG,qBAAM;EAChBU,IAAAA,YAAY,CAACZ,KAAD,CAAZ;EACD,GAFD;EAGD;;EACM,SAASa,QAAT,CAAkBZ,EAAlB,EAAsB;EAC3Ba,EAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoB,cAApB,EAD2B;EAG3B;EACA;;EACAjB,EAAAA,QAAQ,CAACtB,IAAT,CAAcyB,EAAd,EAL2B;;EAO3B,MAAI,CAACF,SAAL,EAAc;EACZG,IAAAA,SAAS,GADG;;EAEZH,IAAAA,SAAO,GAAG,IAAV;EACD;EACF;;ECjCD,IAAI7B,EAAE,GAAG,CAAT;;MACM8C;EACJ;EACA;EACA,mBAAYC,EAAZ,EAAgBC,QAAhB,EAA0BjB,EAA1B,EAA8BkB,OAA9B,EAAuC;EAAA;;EACrC;EACA,SAAKF,EAAL,GAAUA,EAAV;EACA,SAAKC,QAAL,GAAgBA,QAAhB;EACA,SAAKjB,EAAL,GAAUA,EAAV;EACA,SAAKkB,OAAL,GAAeA,OAAf,CALqC;;EAOrC,SAAKjD,EAAL,GAAUA,EAAE,EAAZ;EACA,SAAKkD,IAAL,GAAY,CAAC,CAACD,OAAO,CAACC,IAAtB,CARqC;;EAUrC,SAAKC,IAAL,GAAY,EAAZ,CAVqC;;EAWrC,SAAKC,MAAL,GAAc,IAAIC,GAAJ,EAAd;;EACA,QAAI,OAAOL,QAAP,KAAoB,UAAxB,EAAoC;EAClC,WAAKM,MAAL,GAAcN,QAAd;EACD,KAFD,MAEO;EACL;EACA,WAAKM,MAAL,GAAc,YAAY;EACxB;EACA,YAAIC,IAAI,GAAGP,QAAQ,CAACQ,KAAT,CAAe,GAAf,CAAX;EACA,YAAIC,GAAG,GAAGV,EAAV;;EACA,aAAK,IAAIW,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,IAAI,CAACI,MAAzB,EAAiCD,CAAC,EAAlC,EAAsC;EACpCD,UAAAA,GAAG,GAAGA,GAAG,CAACF,IAAI,CAACG,CAAD,CAAL,CAAT;EACD;;EACD,eAAOD,GAAP,CAPwB;EAQzB,OARD;EASD,KAzBoC;;;EA2BrC,SAAK9C,KAAL,GAAa,KAAKa,GAAL,EAAb,CA3BqC;EA4BtC;;;;aACD,gBAAO1B,GAAP,EAAY;EACV;EACA,UAAIE,EAAE,GAAGF,GAAG,CAACE,EAAb,CAFU;;EAIV,UAAI,CAAC,KAAKoD,MAAL,CAAYQ,GAAZ,CAAgB5D,EAAhB,CAAL,EAA0B;EACxB,aAAKmD,IAAL,CAAU7C,IAAV,CAAeR,GAAf;EACA,aAAKsD,MAAL,CAAYS,GAAZ,CAAgB7D,EAAhB,EAFwB;EAIxB;;EACAF,QAAAA,GAAG,CAACgE,MAAJ,CAAW,IAAX;EACD,OAVS;EAYV;;EACD;;;aACD,eAAM;EACJ;EACA,UAAInD,KAAK,GAAG,KAAKa,GAAL,EAAZ,CAFI;;EAGJ,UAAIuC,QAAQ,GAAG,KAAKpD,KAApB,CAHI;;EAIJ,WAAKA,KAAL,GAAaA,KAAb,CAJI;;EAMJ,UAAI,KAAKuC,IAAT,EAAe;EACb,aAAKnB,EAAL,CAAQiC,IAAR,CAAa,KAAKjB,EAAL,CAAQpC,KAArB,EAA4BoD,QAA5B;EACD;EACF;;;aACD,eAAM;EACJ;EAEAvD,MAAAA,UAAU,CAAC,IAAD,CAAV,CAHI;;EAIJ,UAAMG,KAAK,GAAG,KAAK2C,MAAL,EAAd,CAJI;;EAKJ7C,MAAAA,SAAS,GALL;;EAMJmC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBlC,KAAnB;EACA,aAAOA,KAAP;EACD;EAED;EACA;EACA;;;;aACA,kBAAS;EACP;EACA;EACA;EACA;EACAsD,MAAAA,YAAY,CAAC,IAAD,CAAZ;EACD;;;;;;EAEH,IAAIC,KAAK,GAAG,EAAZ;;EACA,IAAIN,GAAG,GAAG,EAAV;EACA,IAAI/B,OAAO,GAAG,KAAd;;EACA,SAASsC,YAAT,GAAwB;EACtBD,EAAAA,KAAK,CAAC9E,OAAN,CAAc,UAACC,IAAD,EAAU;EACtBA,IAAAA,IAAI,CAAC+E,GAAL;EACD,GAFD;EAGAF,EAAAA,KAAK,GAAG,EAAR;EACAN,EAAAA,GAAG,GAAG,EAAN;EACA/B,EAAAA,OAAO,GAAG,KAAV;EACD;;EACD,SAASoC,YAAT,CAAsB5D,OAAtB,EAA+B;EAC7BuC,EAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;EACA,MAAI7C,EAAE,GAAGK,OAAO,CAACL,EAAjB,CAF6B;EAG7B;;EACA,MAAI4D,GAAG,CAAC5D,EAAD,CAAH,IAAW,IAAf,EAAqB;EACnB;EACA;EACAkE,IAAAA,KAAK,CAAC5D,IAAN,CAAWD,OAAX,EAHmB;;EAInBuD,IAAAA,GAAG,CAAC5D,EAAD,CAAH,GAAU,IAAV,CAJmB;;EAMnB,QAAI,CAAC6B,OAAL,EAAc;EACZ;EACA;EACA;EACA;EACA;EACA;EACA;EACAc,MAAAA,QAAQ,CAACwB,YAAD,CAAR,CARY;EASb;;EACDtC,IAAAA,OAAO,GAAG,IAAV;EACD;EACF;EAKD;EACA;;ECtHO,SAASwC,SAAT,CAAmBtB,EAAnB,EAAuB;EAC1B;EACA;EACA,MAAMuB,IAAI,GAAGvB,EAAE,CAACwB,QAAhB;;EACA,MAAID,IAAI,CAACnD,IAAT,EAAe;EACXqD,IAAAA,QAAQ,CAACzB,EAAD,CAAR;EACH;;EACD,MAAIuB,IAAI,CAACG,KAAT,EAAgB;EACZC,IAAAA,SAAS,CAAC3B,EAAD,CAAT;EACH;;EACD,MAAIuB,IAAI,CAACK,KAAT,EAAgB;;EAKhB,MAAIL,IAAI,CAACM,QAAT,EAAmB;;EAGnB,MAAIN,IAAI,CAACnF,OAAT,EAAkB;EAGrB;;;EASD,SAAS0F,KAAT,CAAe9B,EAAf,EAAmB5B,IAAnB,EAAyBG,GAAzB,EAA8B;EAC1BrC,EAAAA,MAAM,CAAC2B,cAAP,CAAsBmC,EAAtB,EAA0BzB,GAA1B,EAA+B;EAC3BE,IAAAA,GAD2B,iBACrB;EACF,aAAOuB,EAAE,CAAC5B,IAAD,CAAF,CAASG,GAAT,CAAP,CADE;EAEL,KAH0B;EAI3BI,IAAAA,GAJ2B,eAIvBC,QAJuB,EAIb;EACVoB,MAAAA,EAAE,CAAC5B,IAAD,CAAF,CAASG,GAAT,IAAgBK,QAAhB;EACH;EAN0B,GAA/B;EAQH;;EACD,SAAS6C,QAAT,CAAkBzB,EAAlB,EAAsB;EAAE;EACpB,MAAI5B,IAAI,GAAG4B,EAAE,CAACwB,QAAH,CAAYpD,IAAvB;EACAA,EAAAA,IAAI,GAAG4B,EAAE,CAAC+B,KAAH,GAAW,OAAO3D,IAAP,KAAgB,UAAhB,GAA6BA,IAAI,CAAC6C,IAAL,CAAUjB,EAAV,CAA7B,GAA6C5B,IAA/D,CAFkB;EAIlB;EACA;;EACA,OAAK,IAAIG,GAAT,IAAgBH,IAAhB,EAAsB;EAClB0D,IAAAA,KAAK,CAAC9B,EAAD,EAAK,OAAL,EAAczB,GAAd,CAAL;EACH;;EACDJ,EAAAA,QAAQ,CAACC,IAAD,CAAR;EACH;;EAID,SAASuD,SAAT,CAAmB3B,EAAnB,EAAuB;EACnB;EACA,MAAI0B,KAAK,GAAG1B,EAAE,CAACwB,QAAH,CAAYE,KAAxB;EACA7B,EAAAA,OAAO,CAACC,GAAR,CAAY4B,KAAZ,EAHmB;;EAAA,6BAKVnD,GALU;EAMf;EACA,QAAIyD,OAAO,GAAGN,KAAK,CAACnD,GAAD,CAAnB,CAPe;;EAQf,QAAIxC,KAAK,CAACiC,OAAN,CAAcgE,OAAd,CAAJ,EAA4B;EAAC;EACzBC,MAAAA,OAAO,CAAC5F,OAAR,CAAgB,UAAAC,IAAI,EAAE;EAClB4F,QAAAA,cAAc,CAAClC,EAAD,EAAIzB,GAAJ,EAAQjC,IAAR,CAAd;EACH,OAFD;EAGH,KAJD,MAIO;EAAC;EACL;EACA4F,MAAAA,cAAc,CAAClC,EAAD,EAAIzB,GAAJ,EAAQyD,OAAR,CAAd;EACF;EAfc;;EAKnB,OAAK,IAAIzD,GAAT,IAAgBmD,KAAhB,EAAuB;EAAA,UAAdnD,GAAc;EAWtB;EAEJ;EAGD;;;EACA,SAAS2D,cAAT,CAAwBlC,EAAxB,EAA2BC,QAA3B,EAAoC+B,OAApC,EAA4C9B,OAA5C,EAAoD;EACjD;EACA,MAAG,QAAO8B,OAAP,MAAkB,QAArB,EAA8B;EAC1B9B,IAAAA,OAAO,GAAG8B,OAAV,CAD0B;;EAE1BA,IAAAA,OAAO,GAAGA,OAAO,CAACA,OAAlB,CAF0B;EAG7B;;EACD,MAAG,OAAOA,OAAP,KAAkB,QAArB,EAA8B;EAAC;EAC3BA,IAAAA,OAAO,GAAGhC,EAAE,CAACgC,OAAD,CAAZ,CAD0B;EAE7B,GARgD;EAUjD;;;EACA,SAAOhC,EAAE,CAACmC,MAAH,CAAUnC,EAAV,EAAaC,QAAb,EAAsB+B,OAAtB,EAA8B9B,OAA9B,CAAP;EACF;;EAEM,SAASkC,UAAT,CAAoBpC,EAApB,EAAwB;EAC3BH,EAAAA,OAAO,CAACC,GAAR,CAAYE,EAAZ,EAAe,IAAf,EAD2B;;EAG3BA,EAAAA,EAAE,CAAChE,SAAH,CAAaqG,SAAb,GAAyB,UAAUrD,EAAV,EAAc;EAAE;EACrC;EACAY,IAAAA,QAAQ,CAACZ,EAAD,CAAR;EACH,GAHD,EAIAgB,EAAE,CAAChE,SAAH,CAAamG,MAAb,GAAqB,UAASG,GAAT,EAAarC,QAAb,EAAsB+B,OAAtB,EAAyC;EAAA,QAAX9B,OAAW,uEAAH,EAAG;EAAE;EAC5D;EACE;EACD;EACA,IAAc,IAAIH,OAAJ,CAAYuC,GAAZ,EAAgBrC,QAAhB,EAAyB+B,OAAzB,oCAAqC9B,OAArC;EAA6CC,MAAAA,IAAI,EAAC;EAAlD;;EAEd,QAAGD,OAAO,CAACqC,SAAX,EAAqB;EAClBP,MAAAA,OAAO,CAACf,IAAR,CAAaqB,GAAb,EADkB;EAEpB;EACL,GAbD;EAeH;EAID;;EClHA,IAAME,MAAM,iCAAZ;EACA;;EACA,IAAMC,YAAY,iBAAUD,MAAV,kBAAwBA,MAAxB,MAAlB;;EACA,IAAME,YAAY,GAAG,IAAIC,MAAJ,aAAgBF,YAAhB,EAArB;;EACA,IAAMG,MAAM,GAAG,IAAID,MAAJ,gBAAmBF,YAAnB,YAAf;;EACA,IAAMI,SAAS,GAAG,2EAAlB;EACA;;EACA,IAAMC,aAAa,GAAG,YAAtB;EAEA;EAEA;;EAIO,SAASC,SAAT,CAAmBC,IAAnB,EAAyB;EAC5B;EACA,WAASC,gBAAT,CAA0BC,OAA1B,EAAmCC,KAAnC,EAA0C;EACtC,WAAO;EACHC,MAAAA,GAAG,EAAEF,OADF;EACW;EACdG,MAAAA,IAAI,EAAE,CAFH;EAEM;EACTC,MAAAA,QAAQ,EAAE,EAHP;EAGU;EACbH,MAAAA,KAAK,EAALA,KAJG;EAIM;EACTI,MAAAA,MAAM,EAAE,IALL;;EAAA,KAAP;EAOH,GAV2B;EAY5B;;;EACA,MAAIC,IAAJ,CAb4B;;EAc5B,MAAIC,aAAJ,CAd4B;EAe5B;;EACA,MAAIC,KAAK,GAAG,EAAZ;;EACA,WAASC,KAAT,CAAeT,OAAf,EAAwBC,KAAxB,EAA+B;EAAE;EAC7B;EACA,QAAIS,OAAO,GAAGX,gBAAgB,CAACC,OAAD,EAAUC,KAAV,CAA9B,CAF2B;;EAI3B,QAAI,CAACK,IAAL,EAAW;EACPA,MAAAA,IAAI,GAAGI,OAAP;EACH;;EACDH,IAAAA,aAAa,GAAGG,OAAhB,CAP2B;;EAQ3BF,IAAAA,KAAK,CAACnG,IAAN,CAAWqG,OAAX;EACH,GA1B2B;;;EA4B5B,WAASC,GAAT,CAAaX,OAAb,EAAsB;EAAE;EACpB;EACA,QAAIU,OAAO,GAAGF,KAAK,CAACI,GAAN,EAAd,CAFkB;;EAGlBL,IAAAA,aAAa,GAAGC,KAAK,CAACA,KAAK,CAAC9C,MAAN,GAAe,CAAhB,CAArB,CAHkB;;EAKlB,QAAI6C,aAAJ,EAAmB;EAAE;EACjBG,MAAAA,OAAO,CAACL,MAAR,GAAiBE,aAAjB;EACAA,MAAAA,aAAa,CAACH,QAAd,CAAuB/F,IAAvB,CAA4BqG,OAA5B,EAFe;EAGlB;EACJ;;EAED,WAASG,KAAT,CAAeC,IAAf,EAAqB;EAAE;EACnB;EACA;EACAA,IAAAA,IAAI,GAAGA,IAAI,CAACC,OAAL,CAAa,KAAb,EAAoB,EAApB,CAAP;;EACA,QAAID,IAAJ,EAAU;EACNP,MAAAA,aAAa,CAACH,QAAd,CAAuB/F,IAAvB,CAA4B;EACxB8F,QAAAA,IAAI,EAAE,CADkB;EAExBW,QAAAA,IAAI,EAAJA;EAFwB,OAA5B;EAIH;EACJ,GAjD2B;;;EAmD5B,SAAOhB,IAAP,EAAa;EAAE;EACX,QAAIkB,OAAO,GAAGlB,IAAI,CAACmB,OAAL,CAAa,GAAb,CAAd;;EACA,QAAID,OAAO,KAAK,CAAhB,EAAmB;EACf;EACA;EACA;EACA,UAAME,aAAa,GAAGC,aAAa,EAAnC,CAJe;;EAKf,UAAID,aAAJ,EAAmB;EACfT,QAAAA,KAAK,CAACS,aAAa,CAAClB,OAAf,EAAwBkB,aAAa,CAACjB,KAAtC,CAAL;EACA,iBAFe;EAGlB,OARc;;;EAUf,UAAMmB,WAAW,GAAGtB,IAAI,CAACuB,KAAL,CAAW3B,MAAX,CAApB;;EACA,UAAI0B,WAAJ,EAAiB;EACbE,QAAAA,OAAO,CAACF,WAAW,CAAC,CAAD,CAAX,CAAe1D,MAAhB,CAAP;EACAiD,QAAAA,GAAG,CAACS,WAAW,CAAC,CAAD,CAAZ,CAAH;EACA;EACH,OAfc;;EAkBlB,KApBQ;;;EAsBT,QAAIN,IAAI,SAAR;;EACA,QAAIE,OAAO,GAAG,CAAd,EAAiB;EACb;EACAF,MAAAA,IAAI,GAAGhB,IAAI,CAACyB,SAAL,CAAe,CAAf,EAAkBP,OAAlB,CAAP;EACH;;EACD,QAAIF,IAAJ,EAAU;EAAC;EACPQ,MAAAA,OAAO,CAACR,IAAI,CAACpD,MAAN,CAAP;EACAmD,MAAAA,KAAK,CAACC,IAAD,CAAL,CAFM;EAGT,KA9BQ;EAgCT;;EACH,GApF2B;;;EAsF5B,WAASQ,OAAT,CAAiBE,CAAjB,EAAoB;EAAE;EAClB1B,IAAAA,IAAI,GAAGA,IAAI,CAACyB,SAAL,CAAeC,CAAf,CAAP;EAEH,GAzF2B;;;EA2F5B,WAASL,aAAT,GAAyB;EACrB,QAAMV,KAAK,GAAGX,IAAI,CAACuB,KAAL,CAAW7B,YAAX,CAAd,CADqB;;EAErB,QAAIiB,KAAJ,EAAW;EAAC;EACR;EACA;EACA,UAAMY,KAAK,GAAG;EACVrB,QAAAA,OAAO,EAAES,KAAK,CAAC,CAAD,CADJ;EAEVR,QAAAA,KAAK,EAAE;EAFG,OAAd,CAHO;EAQP;;EACAqB,MAAAA,OAAO,CAACb,KAAK,CAAC,CAAD,CAAL,CAAS/C,MAAV,CAAP,CATO;EAWP;EACA;EACA;;EACA,UAAIiD,IAAJ;;EACA,UAAIc,IAAJ;;EACA,aAAO,EAAEd,IAAG,GAAGb,IAAI,CAACuB,KAAL,CAAWzB,aAAX,CAAR,MAAuC6B,IAAI,GAAG3B,IAAI,CAACuB,KAAL,CAAW1B,SAAX,CAA9C,CAAP,EAA6E;EACzE;EACA0B,QAAAA,KAAK,CAACpB,KAAN,CAAY5F,IAAZ,CAAiB;EAAEqH,UAAAA,IAAI,EAAED,IAAI,CAAC,CAAD,CAAZ;EAAiB/G,UAAAA,KAAK,EAAE+G,IAAI,CAAC,CAAD,CAAJ,IAAWA,IAAI,CAAC,CAAD,CAAf,IAAsBA,IAAI,CAAC,CAAD;EAAlD,SAAjB,EAFyE;EAIzE;;EACAH,QAAAA,OAAO,CAACG,IAAI,CAAC,CAAD,CAAJ,CAAQ/D,MAAT,CAAP,CALyE;EAMzE;EACH;;EACD,UAAIiD,IAAJ,EAAS;EACLW,QAAAA,OAAO,CAACX,IAAG,CAAC,CAAD,CAAH,CAAOjD,MAAR,CAAP,CADK;EAEL;;EACA,eAAO2D,KAAP;EACH;EAEJ;EACJ,GA5H2B;;;EA+H5B,SAAOf,IAAP;EACH;;EChJD;EACA;EACA;EACA;EACA;EACA;EACA,IAAMqB,YAAY,GAAG,0BAArB;EACA;;EACA,SAASC,QAAT,CAAkB3B,KAAlB,EAAyB;EACrB;EACA,MAAI4B,GAAG,GAAG,EAAV;;EACA,OAAK,IAAIpE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGwC,KAAK,CAACvC,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;EACnC,QAAIgE,IAAI,GAAGxB,KAAK,CAACxC,CAAD,CAAhB,CADmC;;EAGnC,QAAIgE,IAAI,CAACC,IAAL,KAAc,OAAlB,EAA2B;EAAA;EACvB,YAAIlE,GAAG,GAAG,EAAV,CADuB;;EAEvBiE,QAAAA,IAAI,CAAC/G,KAAL,CAAW6C,KAAX,CAAiB,GAAjB,EAAsBpE,OAAtB,CAA8B,UAAAC,IAAI,EAAI;EAClC,4BAAmBA,IAAI,CAACmE,KAAL,CAAW,GAAX,CAAnB;EAAA;EAAA,cAAKlC,GAAL;EAAA,cAAUX,KAAV;;EACA8C,UAAAA,GAAG,CAACnC,GAAD,CAAH,GAAWX,KAAX;EACH,SAHD;EAIA+G,QAAAA,IAAI,CAAC/G,KAAL,GAAa8C,GAAb,CANuB;EAAA;EAO1B,KAVkC;;;EAYnCqE,IAAAA,GAAG,cAAOJ,IAAI,CAACC,IAAZ,cAAoBI,IAAI,CAACC,SAAL,CAAeN,IAAI,CAAC/G,KAApB,CAApB,MAAH;EACH;;EACD,oBAAWmH,GAAG,CAACG,KAAJ,CAAU,CAAV,EAAa,CAAC,CAAd,CAAX,OAjBqB;EAkBrB;EACH;;;EAED,SAASC,WAAT,CAAqBC,EAArB,EAAyB;EACrB,MAAM9B,QAAQ,GAAG8B,EAAE,CAAC9B,QAApB;;EACA,MAAIA,QAAJ,EAAc;EAAE;EACZ,WAAOA,QAAQ,CAAC+B,GAAT,CAAa,UAAAC,KAAK;EAAA,aAAIC,GAAG,CAACD,KAAD,CAAP;EAAA,KAAlB,EAAkCE,IAAlC,CAAuC,GAAvC,CAAP;EACH;EAGJ;;EACD,SAASD,GAAT,CAAaE,IAAb,EAAmB;EAAE;EACjB;EACA,MAAIA,IAAI,CAACpC,IAAL,KAAc,CAAlB,EAAqB;EACjB,WAAOqC,QAAQ,CAACD,IAAD,CAAf,CADiB;EAEpB,GAFD,MAEO;EACH,QAAIzB,IAAI,GAAGyB,IAAI,CAACzB,IAAhB,CADG;;EAEH,QAAI,CAACa,YAAY,CAACc,IAAb,CAAkB3B,IAAlB,CAAL,EAA8B;EAC1B,0BAAagB,IAAI,CAACC,SAAL,CAAejB,IAAf,CAAb,OAD0B;EAE7B;;EACD,QAAI4B,MAAM,GAAG,EAAb,CALG;;EAMH,QAAIC,SAAS,GAAGhB,YAAY,CAACgB,SAAb,GAAyB,CAAzC,CANG;;EAOH,QAAItB,KAAJ,CAPG;;EAQH,WAAOA,KAAK,GAAGM,YAAY,CAACiB,IAAb,CAAkB9B,IAAlB,CAAf,EAAwC;EACpC;EACA;EACD,UAAI+B,KAAK,GAAGxB,KAAK,CAACwB,KAAlB,CAHqC;EAItC;;EACE,UAAIA,KAAK,GAAGF,SAAZ,EAAuB;EACpBD,QAAAA,MAAM,CAACrI,IAAP,CAAYyH,IAAI,CAACC,SAAL,CAAejB,IAAI,CAACkB,KAAL,CAAWW,SAAX,EAAqBE,KAArB,CAAf,CAAZ,EADoB;EAEvB;EACC,OARmC;;;EAUpCH,MAAAA,MAAM,CAACrI,IAAP,cAAkBgH,KAAK,CAAC,CAAD,CAAL,CAASyB,IAAT,EAAlB;EACCH,MAAAA,SAAS,GAAGE,KAAK,GAACxB,KAAK,CAAC,CAAD,CAAL,CAAS3D,MAA3B,CAXmC;EAYvC;;EACD,QAAGiF,SAAS,GAAC7B,IAAI,CAACpD,MAAlB,EAAyB;EACtBgF,MAAAA,MAAM,CAACrI,IAAP,CAAYyH,IAAI,CAACC,SAAL,CAAejB,IAAI,CAACkB,KAAL,CAAWW,SAAX,CAAf,CAAZ;EACF,KAvBE;;;EA0BH,wBAAaD,MAAM,CAACJ,IAAP,CAAY,GAAZ,CAAb;EACH;EAGJ;;;EAEM,SAASE,QAAT,CAAkBN,EAAlB,EAAsB;EACzB;EACA,MAAI9B,QAAQ,GAAG6B,WAAW,CAACC,EAAD,CAA1B,CAFyB;;EAIzB,MAAIa,IAAI,iBAAUb,EAAE,CAAChC,GAAb,eAAqBgC,EAAE,CAACjC,KAAH,CAASvC,MAAT,aAAqBkE,QAAQ,CAACM,EAAE,CAACjC,KAAJ,CAA7B,IAA4C,WAAjE,SACJG,QAAQ,cAAOA,QAAP,IAAoB,EADxB,MAAR;EAGA,SAAO2C,IAAP;EACH;;EC7EM,SAASC,iBAAT,CAA2BC,QAA3B,EAAqC;EAAE;EAC1C,MAAIC,GAAG,GAAGrD,SAAS,CAACoD,QAAD,CAAnB,CADwC;;EAGxC,MAAIF,IAAI,GAAGP,QAAQ,CAACU,GAAD,CAAnB,CAHwC;EAIxC;EACC;EACD;;EACA,MAAIC,MAAM,GAAG,IAAIC,QAAJ,6BAAkCL,IAAlC,OAAb,CAPwC;EAQxC;EACC;EACD;;EACC,SAAOI,MAAP,CAXuC;EAa3C;EAGD;EACA;EACA;EACA;;ECvBO,SAASE,KAAT,CAAeC,QAAf,EAAyBC,KAAzB,EAAgC;EACnC;EACA;EACA,MAAID,QAAQ,CAACE,QAAT,KAAsB,CAA1B,EAA6B;EACzB;EAEA,QAAItB,EAAE,GAAGuB,SAAS,CAACF,KAAD,CAAlB,CAHyB;;EAIzB,QAAIG,SAAS,GAAGJ,QAAQ,CAACK,UAAzB,CAJyB;EAKzB;EACA;EACA;;EACAD,IAAAA,SAAS,CAACE,YAAV,CAAuB1B,EAAvB,EAA2BoB,QAAQ,CAACO,WAApC,EARyB;;EASzBH,IAAAA,SAAS,CAACI,WAAV,CAAsBR,QAAtB,EATyB;EAUzB;;EACA,WAAOpB,EAAP;EACH,GAZD,MAYK;EAAE;EACHvF,IAAAA,OAAO,CAACC,GAAR,CAAY0G,QAAZ,EAAsBC,KAAtB,EADC;;EAGA,QAAGD,QAAQ,CAACpD,GAAT,KAAeqD,KAAK,CAACrD,GAAxB,EAA4B;EAC3B,aAAQoD,QAAQ,CAACpB,EAAT,CAAYyB,UAAZ,CAAuBI,YAAvB,CAAoCN,SAAS,CAACF,KAAD,CAA7C,EAAqDD,QAAQ,CAACpB,EAA9D,CAAR;EACA,KALD;;;EAOA,QAAG,CAACoB,QAAQ,CAACpD,GAAb,EAAiB;EACb,UAAGoD,QAAQ,CAACxC,IAAT,KAAiByC,KAAK,CAACzC,IAA1B,EAA+B;EAC3B,eAASwC,QAAQ,CAACpB,EAAT,CAAY1F,WAAZ,GAA0B+G,KAAK,CAACzC,IAAzC;EACH;EACJ,KAXD;EAaA;;;EACF,QAAIoB,GAAE,GAAGqB,KAAK,CAACrB,EAAN,GAAWoB,QAAQ,CAACpB,EAA7B;;EACA8B,IAAAA,WAAW,CAACT,KAAD,EAAOD,QAAQ,CAACpI,IAAhB,CAAX,CAfE;;EAiBF,QAAI+I,WAAW,GAAGX,QAAQ,CAAClD,QAAT,IAAqB,EAAvC;EACA,QAAI8D,WAAW,GAAGX,KAAK,CAACnD,QAAN,IAAkB,EAApC;;EACA,QAAG6D,WAAW,CAACvG,MAAZ,GAAmB,CAAnB,IAAsBwG,WAAW,CAACxG,MAAZ,GAAmB,CAA5C,EAA8C;EAAE;EACzC;EACAyG,MAAAA,WAAW,CAACF,WAAD,EAAaG,UAAb,CAAX;EACN,KAHD,MAGM,IAAGH,WAAW,CAACvG,MAAZ,GAAmB,CAAtB,EAAwB;EAAC;EACzBwE,MAAAA,GAAE,CAACmC,SAAH,GAAe,EAAf;EACL,KAFK,MAEA,IAAGH,WAAW,CAACxG,MAAZ,GAAmB,CAAtB,EAAwB;EAAC;EACzB,WAAI,IAAID,CAAC,GAAG,CAAZ,EAAcA,CAAC,GAACyG,WAAW,CAACxG,MAA5B,EAAmCD,CAAC,EAApC,EAAuC;EACnC,YAAI2E,KAAK,GAAG8B,WAAW,CAACzG,CAAD,CAAvB,CADmC;;EAGnCyE,QAAAA,GAAE,CAACoC,WAAH,CAAeb,SAAS,CAACrB,KAAD,CAAxB;EACH;EACN;EAEH;EACJ;;EACD,SAAS+B,WAAT,CAAsBF,WAAtB,EAAkCG,UAAlC,EAA6ClC,EAA7C,EAAgD;;;EAIhD,SAAS8B,WAAT,CAAqBO,KAArB,EAAuC;EAAA,MAAZC,QAAY,uEAAH,EAAG;EAAE;EACvC,MAAIC,QAAQ,GAAGF,KAAK,CAACrJ,IAAN,IAAa,EAA5B,CADqC;;EAErC,MAAIgH,EAAE,GAAGqC,KAAK,CAACrC,EAAf,CAFqC;EAGrC;;EACA,OAAI,IAAI7G,GAAR,IAAemJ,QAAf,EAAwB;EACpB,QAAG,CAACC,QAAQ,CAACpJ,GAAD,CAAZ,EAAkB;EACd;EACA6G,MAAAA,EAAE,CAACwC,eAAH,CAAmBrJ,GAAnB,EAFc;EAGjB;EACJ,GAToC;;;EAWpC,MAAIsJ,QAAQ,GAAGF,QAAQ,CAACG,KAAT,IAAiB,EAAhC,CAXoC;;EAYpC,MAAIC,QAAQ,GAAGL,QAAQ,CAACI,KAAT,IAAiB,EAAhC,CAZoC;;EAapC,OAAI,IAAIvJ,IAAR,IAAewJ,QAAf,EAAwB;EACpB,QAAG,CAACF,QAAQ,CAACtJ,IAAD,CAAZ,EAAkB;EACd6G,MAAAA,EAAE,CAAC0C,KAAH,GAAU,EAAV;EACH;EACJ,GAjBmC;;;EAmBrC,OAAI,IAAIvJ,KAAR,IAAeoJ,QAAf,EAAwB;EACpB,QAAGpJ,KAAG,KAAI,OAAV,EAAkB;EACf,WAAI,IAAIyJ,SAAR,IAAqBL,QAAQ,CAACG,KAA9B,EAAoC;EAChC1C,QAAAA,EAAE,CAAC0C,KAAH,CAASE,SAAT,IAAuBL,QAAQ,CAACG,KAAT,CAAeE,SAAf,CAAvB;EACH;EACH,KAJD,MAIM,IAAIzJ,KAAG,KAAI,OAAX,EAAmB;EACrB6G,MAAAA,EAAE,CAAC6C,SAAH,GAAeN,QAAQ,SAAvB;EACH,KAFK,MAED;EACDvC,MAAAA,EAAE,CAAC8C,YAAH,CAAgB3J,KAAhB,EAAoBoJ,QAAQ,CAACpJ,KAAD,CAA5B;EACH;EACJ;EACF;;;EAEM,SAASoI,SAAT,CAAmBc,KAAnB,EAA0B;EAC7B,MAAMrE,GAAN,GAAyCqE,KAAzC,CAAMrE,GAAN;EAAA,MAAWE,QAAX,GAAyCmE,KAAzC,CAAWnE,QAAX;EAAA,MAAyCmE,KAAzC,CAAqBlJ,GAArB;EAAA,MAAyCkJ,KAAzC,CAA0BrJ,IAA1B;EAAA,UAAgC4F,IAAhC,GAAyCyD,KAAzC,CAAgCzD,KADH;;EAG7B,MAAI,OAAOZ,GAAP,KAAe,QAAnB,EAA6B;EAAE;EAC3BqE,IAAAA,KAAK,CAACrC,EAAN,GAAW7F,QAAQ,CAAC4I,aAAT,CAAuB/E,GAAvB,CAAX,CADyB;;EAEzB8D,IAAAA,WAAW,CAACO,KAAD,CAAX,CAFyB;;EAIzBnE,IAAAA,QAAQ,CAACjH,OAAT,CAAiB,UAAAiJ,KAAK,EAAI;EACtB;EACAmC,MAAAA,KAAK,CAACrC,EAAN,CAASoC,WAAT,CAAqBb,SAAS,CAACrB,KAAD,CAA9B;EACH,KAHD;EAIH,GARD,MAQO;EAAE;EACLmC,IAAAA,KAAK,CAACrC,EAAN,GAAW7F,QAAQ,CAACC,cAAT,CAAwBwE,IAAxB,CAAX;EACH;;EACD,SAAOyD,KAAK,CAACrC,EAAb,CAd6B;EAehC;EAGD;EACA;EACA;EACA;EACA;;ECzGO,SAAUgD,cAAV,CAAyBpI,EAAzB,EAA4BoF,EAA5B,EAA+B;EACnC;EAEA;EACA;EACAiD,EAAAA,QAAQ,CAACrI,EAAD,EAAI,aAAJ,CAAR,CALmC;EAOnC;;EACA,MAAIsI,eAAe,GAAG,SAAlBA,eAAkB,GAAI;EACvBtI,IAAAA,EAAE,CAACuI,OAAH,CAAWvI,EAAE,CAACwI,OAAH,EAAX;EACF,GAFD,CARmC;;;EAYlC,MAAIzI,OAAJ,CAAYC,EAAZ,EAAesI,eAAf,EAA+B,YAAI;EAChCD,IAAAA,QAAQ,CAACrI,EAAD,EAAI,SAAJ,CAAR;EACF,GAFD,EAEE,IAFF,EAZkC;EAelC;;EACAqI,EAAAA,QAAQ,CAACrI,EAAD,EAAI,SAAJ,CAAR;EACH;;EAGM,SAASyI,cAAT,CAAwBnG,GAAxB,EAA4B;EAAE;EAClCA,EAAAA,GAAG,CAACtG,SAAJ,CAAcuM,OAAd,GAAwB,UAASd,KAAT,EAAe;EACpC;EACE,QAAMzH,EAAE,GAAG,IAAX;EACAA,IAAAA,EAAE,CAAC0I,GAAH,GAAUnC,KAAK,CAACvG,EAAE,CAAC0I,GAAJ,EAAQjB,KAAR,CAAf,CAHkC;EAItC,GAJD;EAKF;;EAGM,SAASY,QAAT,CAAkBrI,EAAlB,EAAqB2I,IAArB,EAA0B;EAC9B,MAAMC,QAAQ,GAAG5I,EAAE,CAACwB,QAAH,CAAYmH,IAAZ,CAAjB,CAD8B;;EAE9B,MAAGC,QAAH,EAAY;EACT,SAAI,IAAIjI,CAAC,GAAG,CAAZ,EAAcA,CAAC,GAACiI,QAAQ,CAAChI,MAAzB,EAAgCD,CAAC,EAAjC,EAAoC;EACjCiI,MAAAA,QAAQ,CAACjI,CAAD,CAAR,CAAYM,IAAZ,CAAiBjB,EAAjB,EADiC;EAEnC;EACH;EACH;EAED;;ECvCQ,IAAM6I,KAAK,GAAG,CAClB,cADkB,EAElB,SAFkB,EAGlB,aAHkB,EAIlB,SAJkB,EAKlB,cALkB,EAMlB,SANkB,EAOlB,eAPkB,EAQlB,WARkB,CAAd;;EAWR,IAAMC,MAAM,GAAG,EAAf;;EACAA,MAAM,CAAC1K,IAAP,GAAc,UAAU2K,SAAV,EAAoBC,QAApB,EAA6B;EAAE;EACzC,SAAOA,QAAP,CADuC;EAE1C,CAFD;EAIA;EACA;EACA;EACA;;;EAEA,SAASC,SAAT,CAAmBF,SAAnB,EAA6BC,QAA7B,EAAsC;EAAE;EACpC;EACF,MAAGA,QAAH,EAAY;EACR,QAAGD,SAAH,EAAa;EACR,aAAOA,SAAS,CAACG,MAAV,CAAiBF,QAAjB,CAAP,CADQ;EAEZ,KAFD,MAEK;EACD,aAAO,CAACA,QAAD,CAAP,CADC;EAEJ;EACJ,GAND,MAMK;EACA,WAAOD,SAAP,CADA;EAEJ;EACF;;;EAEAF,KAAK,CAACxM,OAAN,CAAc,UAAA8M,KAAK,EAAE;EACjBL,EAAAA,MAAM,CAACK,KAAD,CAAN,GAAgBF,SAAhB;EACH,CAFD;;EAIM,SAASG,YAAT,CAAsB7F,MAAtB,EAA6B+B,KAA7B,EAAmC;EACtC,MAAMpF,OAAO,GAAG,EAAhB,CADsC;EAGtC;;EACD,OAAI,IAAI3B,GAAR,IAAegF,MAAf,EAAsB;EAAE;EACpB8F,IAAAA,UAAU,CAAC9K,GAAD,CAAV;EACH,GANsC;;;EAQvC,OAAI,IAAIA,IAAR,IAAe+G,KAAf,EAAqB;EAAE;EACpB,QAAG,CAAC/B,MAAM,CAAC+F,cAAP,CAAsB/K,IAAtB,CAAJ,EAA+B;EAC3B8K,MAAAA,UAAU,CAAC9K,IAAD,CAAV;EACH;EACH;;EACA,WAAS8K,UAAT,CAAoB9K,GAApB,EAAwB;EAAE;EACrB;EACD;EACA;EACA;EACA,QAAGuK,MAAM,CAACvK,GAAD,CAAT,EAAe;EAAE;EACf2B,MAAAA,OAAO,CAAC3B,GAAD,CAAP,GAAeuK,MAAM,CAACvK,GAAD,CAAN,CAAYgF,MAAM,CAAChF,GAAD,CAAlB,EAAwB+G,KAAK,CAAC/G,GAAD,CAA7B,CAAf,CADa;EAEd,KAFD,MAEK;EACD;EACA2B,MAAAA,OAAO,CAAC3B,GAAD,CAAP,GAAe+G,KAAK,CAAC/G,GAAD,CAApB;EACH,KAVmB;;EAYvB;;EACD,SAAO2B,OAAP;EACH;;EClED;EAKO,SAASqJ,SAAT,CAAmBjH,GAAnB,EAAwB;EAC7B;EACA;EACA;EAEAA,EAAAA,GAAG,CAACtG,SAAJ,CAAcwN,KAAd,GAAsB,UAAUtJ,OAAV,EAAmB;EACvC;EACA;EACA;EACA;EACA,QAAMF,EAAE,GAAG,IAAX,CALuC;;EAOvCA,IAAAA,EAAE,CAACwB,QAAH,GAAc4H,YAAY,CAAC9G,GAAG,CAACpC,OAAL,EAAaA,OAAb,CAA1B,CAPuC;EAQvC;EACA;;EACAL,IAAAA,OAAO,CAACC,GAAR,CAAaE,EAAE,CAACwB,QAAhB;EACA6G,IAAAA,QAAQ,CAACrI,EAAD,EAAI,cAAJ,CAAR;EACAsB,IAAAA,SAAS,CAACtB,EAAD,CAAT,CAZuC;;EAavCqI,IAAAA,QAAQ,CAACrI,EAAD,EAAI,SAAJ,CAAR,CAbuC;EAevC;EACA;EAEA;;EACA,QAAIA,EAAE,CAACwB,QAAH,CAAY4D,EAAhB,EAAoB;EAClBpF,MAAAA,EAAE,CAACyJ,MAAH,CAAUzJ,EAAE,CAACwB,QAAH,CAAY4D,EAAtB;EACD;EACF,GAtBD,CAL6B;;;EA6B5B9C,EAAAA,GAAG,CAACtG,SAAJ,CAAcyN,MAAd,GAAuB,UAASrE,EAAT,EAAY;EAC5B;EACA,QAAMpF,EAAE,GAAG,IAAX;EACA,QAAME,OAAO,GAAGF,EAAE,CAACwB,QAAnB,CAH4B;EAI5B;EACA;;EACA4D,IAAAA,EAAE,GAAG7F,QAAQ,CAACmK,aAAT,CAAuBtE,EAAvB,CAAL;EACApF,IAAAA,EAAE,CAAC0I,GAAH,GAAStD,EAAT,CAP4B;EAS5B;;EACA,QAAG,CAAClF,OAAO,CAACmG,MAAZ,EAAmB;EAAE;EACnB,UAAIF,QAAQ,GAAGjG,OAAO,CAACiG,QAAvB,CADiB;;EAGhB,UAAG,CAACA,QAAD,IAAYf,EAAf,EAAkB;EACf;EACA;EACC;EACDe,QAAAA,QAAQ,GAAGf,EAAE,CAACuE,SAAd;EACF,OARe;EAUhB;;;EACA,UAAMtD,MAAM,GAAGH,iBAAiB,CAACC,QAAD,CAAhC;EACAjG,MAAAA,OAAO,CAACmG,MAAR,GAAiBA,MAAjB;EACF,KAvB2B;EAyB5B;;;EACA+B,IAAAA,cAAc,CAACpI,EAAD,CAAd;EAEN,GA5BD;EA6BF;;EC/DM,SAAS4J,WAAT,CAAqBtH,GAArB,EAA0B;EAC7B;EACAA,EAAAA,GAAG,CAACtG,SAAJ,CAAc6N,EAAd,GAAmB,YAAY;EAAE;EAC3B,WAAO1B,aAAa,MAAb,SAAiB2B,SAAjB,CAAP;EACL,GAFD;;EAGAxH,EAAAA,GAAG,CAACtG,SAAJ,CAAc+N,EAAd,GAAmB,UAAUC,GAAV,EAAe;EAAE;EAChC;EACA,WAAOA,GAAG,IAAI,IAAP,GAAc,EAAd,GAAoB,QAAOA,GAAP,KAAc,QAAf,GAA2BhF,IAAI,CAACC,SAAL,CAAe+E,GAAf,CAA3B,GAAgDA,GAA1E;EACH,GAHD;;EAIA1H,EAAAA,GAAG,CAACtG,SAAJ,CAAciO,EAAd,GAAmB,UAAUjG,IAAV,EAAgB;EAAE;EACjC,WAAOkG,eAAe,CAAClG,IAAD,CAAtB;EACH,GAFD;;EAGA1B,EAAAA,GAAG,CAACtG,SAAJ,CAAcwM,OAAd,GAAwB,YAAY;EAChC;EACA;EACA,QAAIxI,EAAE,GAAG,IAAT;EACA,QAAMqG,MAAM,GAAGrG,EAAE,CAACwB,QAAH,CAAY6E,MAA3B,CAJgC;;EAMhC,QAAIoB,KAAK,GAAGpB,MAAM,CAACpF,IAAP,CAAY,IAAZ,CAAZ,CANgC;;EAQhC,WAAOwG,KAAP;EACH,GATD;EAUH;;EAED,SAASU,aAAT,CAAuB/E,GAAvB,EAA+C;EAAA,MAApBhF,IAAoB,uEAAf,EAAe;;EAAA,oCAATkF,QAAS;EAATA,IAAAA,QAAS;EAAA;;EAC1C,SAAOmE,KAAK,CAACrE,GAAD,EAAKhF,IAAL,EAAUA,IAAI,CAACG,GAAf,EAAmB+E,QAAnB,CAAZ;EACJ;;EAED,SAAS4G,eAAT,CAAyBlG,IAAzB,EAA8B;EAC3B,SAAOyD,KAAK,CAAC0C,SAAD,EAAWA,SAAX,EAAqBA,SAArB,EAA+BA,SAA/B,EAAyCnG,IAAzC,CAAZ;EACF;;;EAED,SAASyD,KAAT,CAAerE,GAAf,EAAmBhF,IAAnB,EAAwBG,GAAxB,EAA4B+E,QAA5B,EAAqCU,IAArC,EAA0C;EACvC,SAAO;EACHZ,IAAAA,GAAG,EAAHA,GADG;EAEHhF,IAAAA,IAAI,EAAJA,IAFG;EAGHG,IAAAA,GAAG,EAAHA,GAHG;EAIH+E,IAAAA,QAAQ,EAARA,QAJG;EAKHU,IAAAA,IAAI,EAAJA;EALG,GAAP;EAOF;;ECtCO,SAASoG,aAAT,CAAuB9H,GAAvB,EAA2B;EAC9B;EACA;EACAA,EAAAA,GAAG,CAACpC,OAAJ,GAAc,EAAd,CAH8B;;EAIhCoC,EAAAA,GAAG,CAAC+H,KAAJ,GAAY,UAASA,KAAT,EAAe;EACxB;EACA;EACA,SAAKnK,OAAL,GAAekJ,YAAY,CAAC,KAAKlJ,OAAN,EAAcmK,KAAd,CAA3B,CAHwB;EAK1B,GALD;EAMD;;ECLA,SAAS/H,GAAT,CAAapC,OAAb,EAAqB;EACnB,OAAKsJ,KAAL,CAAWtJ,OAAX;EACD;;;EAEDqJ,SAAS,CAACjH,GAAD,CAAT;;EACAmG,cAAc,CAACnG,GAAD,CAAd;;EACAsH,WAAW,CAACtH,GAAD,CAAX;;EACAF,UAAU,CAACE,GAAD,CAAV;EACA;;EACE8H,aAAa,CAAC9H,GAAD,CAAb;;EAGA,IAAIgI,GAAG,GAAG,IAAIhI,GAAJ,CAAQ;EAAClE,EAAAA,IAAI,EAAC;EAACwG,IAAAA,IAAI,EAAC;EAAN;EAAN,CAAR,CAAV;EACA,IAAI2F,OAAO,GAAGrE,iBAAiB,sEAA/B;EAKA,IAAIsE,MAAM,GAAGD,OAAO,CAACtJ,IAAR,CAAaqJ,GAAb,CAAb;EACC/K,QAAQ,CAACkL,IAAT,CAAcjD,WAAd,CAA0Bb,SAAS,CAAC6D,MAAD,CAAnC;;EAEA,IAAIE,GAAG,GAAG,IAAIpI,GAAJ,CAAQ;EAAClE,EAAAA,IAAI,EAAC;EAACwG,IAAAA,IAAI,EAAC;EAAN;EAAN,CAAR,CAAV;EACA,IAAI+F,OAAO,GAAGzE,iBAAiB,uFAA/B;EAMA,IAAI0E,MAAM,GAAGD,OAAO,CAAC1J,IAAR,CAAayJ,GAAb,CAAb;;EAECG,UAAU,CAAC,YAAI;EACbtE,EAAAA,KAAK,CAACiE,MAAD,EAAQI,MAAR,CAAL;EACD,CAFS,EAER,IAFQ,CAAV;;;;;;;;"}